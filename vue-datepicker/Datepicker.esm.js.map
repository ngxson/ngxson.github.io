{"version":3,"file":"Datepicker.esm.js","sources":["../src/locale/Language.js","../src/locale/translations/en.js","../src/utils/DateUtils.js","../src/utils/calendarSlots.js","../src/mixins/inputProps.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/DateInput.vue","../src/components/PickerHeader.vue","../src/mixins/pickerMixin.vue","../src/utils/DisabledDatesUtils.js","../src/components/PickerDay.vue","../src/components/PickerMonth.vue","../src/components/PickerYear.vue","../src/utils/dom.js","../src/components/Popup.vue","../src/components/Datepicker.vue"],"sourcesContent":["export default class Language {\r\n  // eslint-disable-next-line max-params\r\n  constructor(\r\n    language,\r\n    months,\r\n    monthsAbbr,\r\n    days,\r\n    rtl = false,\r\n    ymd = false,\r\n    yearSuffix = '',\r\n  ) {\r\n    this.language = language\r\n    this.months = months\r\n    this.monthsAbbr = monthsAbbr\r\n    this.days = days\r\n    this.rtl = rtl\r\n    this.ymd = ymd\r\n    this.yearSuffix = yearSuffix\r\n  }\r\n\r\n  /* eslint-disable no-underscore-dangle */\r\n  get language() {\r\n    return this._language\r\n  }\r\n\r\n  set language(language) {\r\n    if (typeof language !== 'string') {\r\n      throw new TypeError('Language must be a string')\r\n    }\r\n    this._language = language\r\n  }\r\n\r\n  get months() {\r\n    return this._months\r\n  }\r\n\r\n  set months(months) {\r\n    if (months.length !== 12) {\r\n      throw new RangeError(\r\n        `There must be 12 months for ${this.language} language`,\r\n      )\r\n    }\r\n    this._months = months\r\n  }\r\n\r\n  get monthsAbbr() {\r\n    return this._monthsAbbr\r\n  }\r\n\r\n  set monthsAbbr(monthsAbbr) {\r\n    if (monthsAbbr.length !== 12) {\r\n      throw new RangeError(\r\n        `There must be 12 abbreviated months for ${this.language} language`,\r\n      )\r\n    }\r\n    this._monthsAbbr = monthsAbbr\r\n  }\r\n\r\n  get days() {\r\n    return this._days\r\n  }\r\n\r\n  set days(days) {\r\n    if (days.length !== 7) {\r\n      throw new RangeError(`There must be 7 days for ${this.language} language`)\r\n    }\r\n    this._days = days\r\n  }\r\n\r\n  getDaysStartingOn(firstDayOfWeek) {\r\n    const firstDays = this._days.slice(firstDayOfWeek)\r\n    const lastDays = this._days.slice(0, firstDayOfWeek)\r\n\r\n    return firstDays.concat(lastDays)\r\n  }\r\n\r\n  getMonthByAbbrName(name) {\r\n    const monthValue = this._monthsAbbr.findIndex((month) => month === name) + 1\r\n    return monthValue < 10 ? `0${monthValue}` : `${monthValue}`\r\n  }\r\n\r\n  getMonthByName(name) {\r\n    const monthValue = this._months.findIndex((month) => month === name) + 1\r\n    return monthValue < 10 ? `0${monthValue}` : `${monthValue}`\r\n  }\r\n}\r\n","import Language from '../Language'\r\n\r\nexport default new Language(\r\n  'English',\r\n  [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ],\r\n  [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n  ],\r\n  ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n)\r\n","import en from '~/locale/translations/en'\r\n\r\n// eslint-disable-next-line complexity,max-statements\r\nconst getParsedDate = ({ formatStr, dateStr, translation }) => {\r\n  const splitter = formatStr.match(/-|\\/|\\s|\\./) || ['-']\r\n  const df = formatStr.split(splitter[0])\r\n  const ds = dateStr.split(splitter[0])\r\n  const ymd = [0, 0, 0]\r\n  for (let i = 0; i < df.length; i += 1) {\r\n    if (/yyyy/i.test(df[i])) {\r\n      ymd[0] = ds[i]\r\n    } else if (/mmmm/i.test(df[i])) {\r\n      ymd[1] = translation.getMonthByName(ds[i])\r\n    } else if (/mmm/i.test(df[i])) {\r\n      ymd[1] = translation.getMonthByAbbrName(ds[i])\r\n    } else if (/mm/i.test(df[i])) {\r\n      ymd[1] = ds[i]\r\n    } else if (/m/i.test(df[i])) {\r\n      ymd[1] = ds[i]\r\n    } else if (/dd/i.test(df[i])) {\r\n      ymd[2] = ds[i]\r\n    } else if (/d/i.test(df[i])) {\r\n      const tmp = ds[i].replace(/st|rd|nd|th/g, '')\r\n      ymd[2] = tmp < 10 ? `0${tmp}` : `${tmp}`\r\n    }\r\n  }\r\n  return ymd\r\n}\r\n\r\nconst utils = {\r\n  /**\r\n   * @type {Boolean}\r\n   */\r\n  useUtc: false,\r\n  /**\r\n   * Returns the full year, using UTC or not\r\n   * @param {Date} date\r\n   */\r\n  getFullYear(date) {\r\n    return this.useUtc ? date.getUTCFullYear() : date.getFullYear()\r\n  },\r\n\r\n  /**\r\n   * Returns the month, using UTC or not\r\n   * @param {Date} date\r\n   */\r\n  getMonth(date) {\r\n    return this.useUtc ? date.getUTCMonth() : date.getMonth()\r\n  },\r\n\r\n  /**\r\n   * Returns the number of days in the month, using UTC or not\r\n   * @param {Date} date\r\n   */\r\n  getDaysInMonth(date) {\r\n    return this.daysInMonth(this.getFullYear(date), this.getMonth(date))\r\n  },\r\n\r\n  /**\r\n   * Returns the date, using UTC or not\r\n   * @param {Date} date\r\n   */\r\n  getDate(date) {\r\n    return this.useUtc ? date.getUTCDate() : date.getDate()\r\n  },\r\n\r\n  /**\r\n   * Returns the day, using UTC or not\r\n   * @param {Date} date\r\n   */\r\n  getDay(date) {\r\n    return this.useUtc ? date.getUTCDay() : date.getDay()\r\n  },\r\n\r\n  /**\r\n   * Returns the hours, using UTC or not\r\n   * @param {Date} date\r\n   */\r\n  getHours(date) {\r\n    return this.useUtc ? date.getUTCHours() : date.getHours()\r\n  },\r\n\r\n  /**\r\n   * Returns the minutes, using UTC or not\r\n   * @param {Date} date\r\n   */\r\n  getMinutes(date) {\r\n    return this.useUtc ? date.getUTCMinutes() : date.getMinutes()\r\n  },\r\n\r\n  /**\r\n   * Sets the full year, using UTC or not\r\n   * @param {Date} date\r\n   * @param {String, Number} value\r\n   */\r\n  setFullYear(date, value) {\r\n    return this.useUtc ? date.setUTCFullYear(value) : date.setFullYear(value)\r\n  },\r\n\r\n  /**\r\n   * Sets the month, using UTC or not\r\n   * @param {Date} date\r\n   * @param {String, Number} value\r\n   */\r\n  setMonth(date, value) {\r\n    return this.useUtc ? date.setUTCMonth(value) : date.setMonth(value)\r\n  },\r\n\r\n  /**\r\n   * Sets the date, using UTC or not\r\n   * @param {Date} date\r\n   * @param {String, Number} value\r\n   */\r\n  setDate(date, value) {\r\n    return this.useUtc ? date.setUTCDate(value) : date.setDate(value)\r\n  },\r\n\r\n  /**\r\n   * Check if date1 is equivalent to date2, without comparing the time\r\n   * @see https://stackoverflow.com/a/6202196/4455925\r\n   * @param {Date} date1\r\n   * @param {Date} date2\r\n   */\r\n  compareDates(date1, date2) {\r\n    const d1 = new Date(date1.valueOf())\r\n    const d2 = new Date(date2.valueOf())\r\n\r\n    this.resetDateTime(d1)\r\n    this.resetDateTime(d2)\r\n    return d1.valueOf() === d2.valueOf()\r\n  },\r\n\r\n  /**\r\n   * Validates a date object\r\n   * @param {Date} date - an object instantiated with the new Date constructor\r\n   * @return {Boolean}\r\n   */\r\n  isValidDate(date) {\r\n    if (Object.prototype.toString.call(date) !== '[object Date]') {\r\n      return false\r\n    }\r\n    return !Number.isNaN(date.valueOf())\r\n  },\r\n\r\n  /**\r\n   * Return abbreviated week day name\r\n   * @param {Date} date\r\n   * @param {Array} days\r\n   * @return {String}\r\n   */\r\n  getDayNameAbbr(date, days) {\r\n    if (typeof date !== 'object') {\r\n      throw TypeError('Invalid Type')\r\n    }\r\n    return days[this.getDay(date)]\r\n  },\r\n\r\n  /**\r\n   * Return day number from abbreviated week day name\r\n   * @param {String} abbr\r\n   * @return {Number}\r\n   */\r\n  getDayFromAbbr(abbr) {\r\n    for (let i = 0; i < en.days.length; i += 1) {\r\n      if (abbr.toLowerCase() === en.days[i].toLowerCase()) {\r\n        return i\r\n      }\r\n    }\r\n    throw TypeError('Invalid week day')\r\n  },\r\n\r\n  /**\r\n   * Return name of the month\r\n   * @param {Number|Date} month\r\n   * @param {Array} months\r\n   * @return {String}\r\n   */\r\n  getMonthName(month, months) {\r\n    if (!months) {\r\n      throw Error('missing 2nd parameter Months array')\r\n    }\r\n    if (typeof month === 'object') {\r\n      return months[this.getMonth(month)]\r\n    }\r\n    if (typeof month === 'number') {\r\n      return months[month]\r\n    }\r\n    throw TypeError('Invalid type')\r\n  },\r\n\r\n  /**\r\n   * Return an abbreviated version of the month\r\n   * @param {Number|Date} month\r\n   * @param {Array} monthsAbbr\r\n   * @return {String}\r\n   */\r\n  getMonthNameAbbr(month, monthsAbbr) {\r\n    if (!monthsAbbr) {\r\n      throw Error('missing 2nd paramter Months array')\r\n    }\r\n    if (typeof month === 'object') {\r\n      return monthsAbbr[this.getMonth(month)]\r\n    }\r\n    if (typeof month === 'number') {\r\n      return monthsAbbr[month]\r\n    }\r\n    throw TypeError('Invalid type')\r\n  },\r\n\r\n  /**\r\n   * Alternative get total number of days in month\r\n   * @param {Number} year\r\n   * @param {Number} month\r\n   * @return {Number}\r\n   */\r\n  // eslint-disable-next-line complexity\r\n  daysInMonth(year, month) {\r\n    if (/8|3|5|10/.test(month)) {\r\n      return 30\r\n    }\r\n    if (month === 1) {\r\n      return (!(year % 4) && year % 100) || !(year % 400) ? 29 : 28\r\n    }\r\n    return 31\r\n  },\r\n\r\n  /**\r\n   * Get nth suffix for date\r\n   * @param {Number} day\r\n   * @return {String}\r\n   */\r\n  // eslint-disable-next-line complexity\r\n  getNthSuffix(day) {\r\n    switch (day) {\r\n      case 1:\r\n      case 21:\r\n      case 31:\r\n        return 'st'\r\n      case 2:\r\n      case 22:\r\n        return 'nd'\r\n      case 3:\r\n      case 23:\r\n        return 'rd'\r\n      default:\r\n        return 'th'\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Formats date object\r\n   * @param {Date} date\r\n   * @param {String} formatStr\r\n   * @param {Object} translation\r\n   * @return {String}\r\n   */\r\n  formatDate(date, formatStr, translation) {\r\n    const translationTemp = !translation ? en : translation\r\n    const year = this.getFullYear(date)\r\n    const month = this.getMonth(date) + 1\r\n    const day = this.getDate(date)\r\n\r\n    const matches = {\r\n      dd: `0${day}`.slice(-2),\r\n      d: day,\r\n      yyyy: year,\r\n      yy: String(year).slice(2),\r\n      MMMM: this.getMonthName(this.getMonth(date), translationTemp.months),\r\n      MMM: this.getMonthNameAbbr(\r\n        this.getMonth(date),\r\n        translationTemp.monthsAbbr,\r\n      ),\r\n      MM: `0${month}`.slice(-2),\r\n      M: month,\r\n      o: this.getNthSuffix(this.getDate(date)),\r\n      E: this.getDayNameAbbr(date, translationTemp.days),\r\n    }\r\n\r\n    const REGEX_FORMAT = /y{4}|y{2}|M{1,4}(?![aäe])|d{1,2}|o{1}|E{1}(?![eéi])/g\r\n    return formatStr.replace(REGEX_FORMAT, (match) => matches[match] || match)\r\n  },\r\n\r\n  /**\r\n   * makes date parseable\r\n   * to use with international dates\r\n   * @param {String} dateStr\r\n   * @param {String|Function} formatStr\r\n   * @param {Object} translation\r\n   * @param {Function} parser\r\n   * @return {Date | String}\r\n   */\r\n  // eslint-disable-next-line max-params,complexity,max-statements\r\n  parseDate(dateStr, formatStr, translation, parser) {\r\n    if (!(dateStr && formatStr)) {\r\n      return dateStr\r\n    }\r\n    if (typeof formatStr === 'function') {\r\n      if (!parser || typeof parser !== 'function') {\r\n        throw new Error(\r\n          'Parser need to be a function if you are using a custom formatter',\r\n        )\r\n      }\r\n      return parser(dateStr)\r\n    }\r\n    const ymd = getParsedDate({\r\n      formatStr,\r\n      dateStr,\r\n      translation: !translation ? en : translation,\r\n    })\r\n\r\n    const dat = `${ymd.join('-')}${this.getTime()}`\r\n    if (Number.isNaN(Date.parse(dat))) {\r\n      return dateStr\r\n    }\r\n    return dat\r\n  },\r\n\r\n  getTime() {\r\n    const time = 'T00:00:00'\r\n    if (this.useUtc) {\r\n      return `${time}Z`\r\n    }\r\n    return time\r\n  },\r\n\r\n  /**\r\n   * Creates an array of dates for each day in between two dates.\r\n   * @param {Date} start\r\n   * @param {Date} end\r\n   * @return {Array}\r\n   */\r\n  createDateArray(start, end) {\r\n    const dates = []\r\n    let startTemp = start\r\n    while (startTemp <= end) {\r\n      dates.push(new Date(startTemp))\r\n      startTemp = this.setDate(\r\n        new Date(startTemp),\r\n        this.getDate(new Date(startTemp)) + 1,\r\n      )\r\n    }\r\n    return dates\r\n  },\r\n\r\n  /**\r\n   * Remove hours/minutes/seconds/milliseconds from a date object\r\n   * @param {Date} date\r\n   * @return {Date}\r\n   */\r\n  resetDateTime(date) {\r\n    return new Date(\r\n      this.useUtc ? date.setUTCHours(0, 0, 0, 0) : date.setHours(0, 0, 0, 0),\r\n    )\r\n  },\r\n\r\n  /**\r\n   * Return a new date object with hours/minutes/seconds/milliseconds removed\r\n   * @return {Date}\r\n   */\r\n  getNewDateObject(date) {\r\n    return date\r\n      ? this.resetDateTime(new Date(date))\r\n      : this.resetDateTime(new Date())\r\n  },\r\n}\r\n\r\nexport const makeDateUtils = (useUtc) => ({\r\n  ...utils,\r\n  useUtc,\r\n})\r\n\r\nexport default {\r\n  ...utils,\r\n}\r\n","export default [\r\n  'beforeCalendarHeaderDay',\r\n  'calendarFooterDay',\r\n  'beforeCalendarHeaderMonth',\r\n  'calendarFooterMonth',\r\n  'beforeCalendarHeaderYear',\r\n  'calendarFooterYear',\r\n  'nextIntervalBtn',\r\n  'prevIntervalBtn',\r\n]\r\n","<script>\r\nexport default {\r\n  props: {\r\n    autofocus: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    bootstrapStyling: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    clearButton: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    clearButtonIcon: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    calendarButton: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    calendarButtonIcon: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    calendarButtonIconContent: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    format: {\r\n      type: [String, Function],\r\n      default: 'dd MMM yyyy',\r\n    },\r\n    id: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    inline: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    inputClass: {\r\n      type: [String, Object, Array],\r\n      default: null,\r\n    },\r\n    maxlength: {\r\n      type: [Number, String],\r\n      default: null,\r\n    },\r\n    name: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    openDate: {\r\n      type: [String, Date, Number],\r\n      default: null,\r\n      validator: (val) =>\r\n        val === null ||\r\n        val instanceof Date ||\r\n        typeof val === 'string' ||\r\n        typeof val === 'number',\r\n    },\r\n    parser: {\r\n      type: Function,\r\n      default: null,\r\n    },\r\n    pattern: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    refName: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    required: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    showCalendarOnButtonClick: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    showCalendarOnFocus: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    tabindex: {\r\n      type: [Number, String],\r\n      default: null,\r\n    },\r\n    typeable: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    useUtc: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n}\r\n</script>\r\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\r\n  <div :class=\"{ 'input-group': bootstrapStyling }\">\r\n    <slot name=\"beforeDateInput\" />\r\n    <!-- Calendar Button -->\r\n    <span\r\n      v-if=\"calendarButton\"\r\n      :class=\"{\r\n        'input-group-prepend': bootstrapStyling,\r\n        'calendar-btn-disabled': disabled,\r\n      }\"\r\n      class=\"vdp-datepicker__calendar-button\"\r\n      @click=\"toggleCalendar\"\r\n    >\r\n      <span :class=\"{ 'input-group-text': bootstrapStyling }\">\r\n        <i :class=\"calendarButtonIcon\">\r\n          {{ calendarButtonIconContent }}\r\n          <span v-if=\"!calendarButtonIcon\">&hellip;</span>\r\n        </i>\r\n      </span>\r\n    </span>\r\n    <!-- Input -->\r\n    <input\r\n      :id=\"id\"\r\n      :ref=\"refName\"\r\n      autocomplete=\"off\"\r\n      :autofocus=\"autofocus\"\r\n      :class=\"computedInputClass\"\r\n      :clear-button=\"clearButton\"\r\n      :disabled=\"disabled\"\r\n      :maxlength=\"maxlength\"\r\n      :name=\"name\"\r\n      :pattern=\"pattern\"\r\n      :placeholder=\"placeholder\"\r\n      :readonly=\"!typeable\"\r\n      :required=\"required\"\r\n      :tabindex=\"tabindex\"\r\n      :type=\"inline ? 'hidden' : 'text'\"\r\n      :value=\"formattedValue\"\r\n      @blur=\"inputBlurred\"\r\n      @click=\"showCalendarByClick\"\r\n      @focus=\"showCalendarByFocus\"\r\n      @keyup=\"parseTypedDate\"\r\n    />\r\n    <!-- Clear Button -->\r\n    <span\r\n      v-if=\"clearButton && selectedDate\"\r\n      :class=\"{ 'input-group-append': bootstrapStyling }\"\r\n      class=\"vdp-datepicker__clear-button\"\r\n      @click=\"clearDate()\"\r\n    >\r\n      <span :class=\"{ 'input-group-text': bootstrapStyling }\">\r\n        <i :class=\"clearButtonIcon\">\r\n          <span v-if=\"!clearButtonIcon\">&times;</span>\r\n        </i>\r\n      </span>\r\n    </span>\r\n    <slot name=\"afterDateInput\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport { makeDateUtils } from '~/utils/DateUtils'\r\nimport inputProps from '~/mixins/inputProps.vue'\r\n\r\nexport default {\r\n  name: 'DateInput',\r\n  mixins: [inputProps],\r\n  props: {\r\n    isOpen: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    resetTypedDate: {\r\n      type: [Date],\r\n      default: null,\r\n    },\r\n    selectedDate: {\r\n      type: Date,\r\n      default: null,\r\n    },\r\n    translation: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    const constructedDateUtils = makeDateUtils(this.useUtc)\r\n    return {\r\n      input: null,\r\n      typedDate: '',\r\n      utils: constructedDateUtils,\r\n    }\r\n  },\r\n  computed: {\r\n    computedInputClass() {\r\n      if (this.bootstrapStyling) {\r\n        if (typeof this.inputClass === 'string') {\r\n          return [this.inputClass, 'form-control'].join(' ')\r\n        }\r\n        return { 'form-control': true, ...this.inputClass }\r\n      }\r\n      return this.inputClass\r\n    },\r\n    formattedValue() {\r\n      if (!this.selectedDate) {\r\n        return null\r\n      }\r\n      if (this.typedDate.length) {\r\n        return this.typedDate\r\n      }\r\n      return this.formattedDate\r\n    },\r\n    formattedDate() {\r\n      return typeof this.format === 'function'\r\n        ? this.format(new Date(this.selectedDate))\r\n        : this.utils.formatDate(\r\n            new Date(this.selectedDate),\r\n            this.format,\r\n            this.translation,\r\n          )\r\n    },\r\n  },\r\n  watch: {\r\n    resetTypedDate() {\r\n      this.typedDate = ''\r\n    },\r\n  },\r\n  mounted() {\r\n    this.input = this.$el.querySelector('input')\r\n  },\r\n  methods: {\r\n    /**\r\n     * emit a clearDate event\r\n     */\r\n    clearDate() {\r\n      this.$emit('clear-date')\r\n    },\r\n    /**\r\n     * Submits a typed date if it's valid\r\n     */\r\n    inputBlurred() {\r\n      if (this.typeable) {\r\n        const parsableDate = this.parseDate(this.input.value)\r\n        const parsedDate = Date.parse(parsableDate)\r\n\r\n        if (Number.isNaN(parsedDate)) {\r\n          this.clearDate()\r\n        } else {\r\n          this.input.value = this.formattedDate\r\n          this.typedDate = ''\r\n          this.$emit('typed-date', parsedDate)\r\n        }\r\n      }\r\n      this.$emit('blur')\r\n      this.$emit('close-calendar')\r\n    },\r\n    /**\r\n     * Attempt to parse a typed date\r\n     * @param {Event} event\r\n     */\r\n    parseTypedDate(event) {\r\n      const code = event.keyCode ? event.keyCode : event.which\r\n      // close calendar if escape or enter are pressed\r\n      if (\r\n        [\r\n          27, // escape\r\n          13, // enter\r\n        ].indexOf(code) !== -1\r\n      ) {\r\n        this.input.blur()\r\n      }\r\n      if (this.typeable) {\r\n        const parsableDate = this.parseDate(this.input.value)\r\n        const parsedDate = Date.parse(parsableDate)\r\n        if (!Number.isNaN(parsedDate)) {\r\n          this.typedDate = this.input.value\r\n          this.$emit('typed-date', new Date(parsedDate))\r\n        }\r\n      }\r\n    },\r\n    parseDate(value) {\r\n      return this.utils.parseDate(\r\n        value,\r\n        this.format,\r\n        this.translation,\r\n        this.parser,\r\n      )\r\n    },\r\n    toggleCalendar() {\r\n      this.$emit(this.isOpen ? 'close-calendar' : 'show-calendar')\r\n    },\r\n    showCalendarByClick() {\r\n      if (!this.showCalendarOnButtonClick) {\r\n        this.toggleCalendar()\r\n      }\r\n    },\r\n    showCalendarByFocus() {\r\n      if (this.showCalendarOnFocus) {\r\n        this.$emit('show-calendar')\r\n      }\r\n\r\n      this.$emit('focus')\r\n    },\r\n  },\r\n}\r\n</script>\r\n","<template>\r\n  <header v-if=\"config.showHeader\">\r\n    <span\r\n      class=\"prev\"\r\n      :class=\"{ disabled: isLeftNavDisabled }\"\r\n      @click=\"config.isRtl ? next() : previous()\"\r\n    >\r\n      <slot name=\"prevIntervalBtn\">\r\n        <span class=\"default\">&lt;</span>\r\n      </slot>\r\n    </span>\r\n    <slot />\r\n    <span\r\n      class=\"next\"\r\n      :class=\"{ disabled: isRightNavDisabled }\"\r\n      @click=\"config.isRtl ? previous() : next()\"\r\n    >\r\n      <slot name=\"nextIntervalBtn\">\r\n        <span class=\"default\">&gt;</span>\r\n      </slot>\r\n    </span>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PickerHeader',\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          showHeader: true,\r\n          isRtl: false,\r\n          isNextDisabled: false,\r\n          isPreviousDisabled: false,\r\n        }\r\n      },\r\n    },\r\n    next: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n    previous: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    /**\r\n     * Is the left hand navigation button disabled?\r\n     * @return {Boolean}\r\n     */\r\n    isLeftNavDisabled() {\r\n      return this.config.isRtl\r\n        ? this.config.isNextDisabled\r\n        : this.config.isPreviousDisabled\r\n    },\r\n    /**\r\n     * Is the right hand navigation button disabled?\r\n     * @return {Boolean}\r\n     */\r\n    isRightNavDisabled() {\r\n      return this.config.isRtl\r\n        ? this.config.isPreviousDisabled\r\n        : this.config.isNextDisabled\r\n    },\r\n  },\r\n}\r\n</script>\r\n","<script>\r\nimport PickerHeader from '~/components/PickerHeader.vue'\r\nimport { makeDateUtils } from '~/utils/DateUtils'\r\n\r\nexport default {\r\n  components: { PickerHeader },\r\n  inheritAttrs: false,\r\n  props: {\r\n    allowedToShowView: {\r\n      type: Function,\r\n      default() {},\r\n    },\r\n    disabledDates: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      },\r\n    },\r\n    isRtl: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    pageDate: {\r\n      type: Date,\r\n      default: null,\r\n    },\r\n    pageTimestamp: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    selectedDate: {\r\n      type: Date,\r\n      default: null,\r\n    },\r\n    showHeader: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    translation: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      },\r\n    },\r\n    useUtc: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      headerConfig: {\r\n        showHeader: this.showHeader,\r\n        isRtl: this.isRtl,\r\n        /**\r\n         * Need to be set inside the different pickers for month, year, decade\r\n         */\r\n        isNextDisabled: this.isNextDisabled,\r\n        isPreviousDisabled: this.isPreviousDisabled,\r\n      },\r\n      utils: makeDateUtils(this.useUtc),\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * Emit an event to show the month picker\r\n     */\r\n    showPickerCalendar(type) {\r\n      this.$emit(`show-${type}-calendar`)\r\n    },\r\n  },\r\n}\r\n</script>\r\n","const checkForDisabledTo = (disabledDates) => {\r\n  return typeof disabledDates.to !== 'undefined' && disabledDates.to\r\n}\r\nconst checkForDisabledFrom = (disabledDates) => {\r\n  return typeof disabledDates.from !== 'undefined' && disabledDates.from\r\n}\r\nconst checkDateSpecific = (date, disabledDates, utils) => {\r\n  const hasDates =\r\n    typeof disabledDates.dates !== 'undefined' && disabledDates.dates.length\r\n  if (!hasDates) {\r\n    return false\r\n  }\r\n  const { dates } = disabledDates\r\n  for (let i = 0; i < dates.length; i += 1) {\r\n    if (utils.compareDates(date, dates[i])) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n// eslint-disable-next-line complexity\r\nconst checkDateDisabledFromTo = (date, disabledDates) => {\r\n  const isDisabledTo =\r\n    checkForDisabledTo(disabledDates) && date < disabledDates.to\r\n  const isDisabledFrom =\r\n    checkForDisabledFrom(disabledDates) && date > disabledDates.from\r\n\r\n  return isDisabledTo || isDisabledFrom\r\n}\r\n\r\n// eslint-disable-next-line complexity,max-statements\r\nconst checkDateRange = (date, disabledDates) => {\r\n  const hasRange =\r\n    typeof disabledDates.ranges !== 'undefined' && disabledDates.ranges.length\r\n  if (!hasRange) {\r\n    return false\r\n  }\r\n  const { ranges } = disabledDates\r\n  for (let i = 0; i < ranges.length; i += 1) {\r\n    const range = ranges[i]\r\n    const hasFrom = checkForDisabledFrom(range)\r\n    const hasTo = checkForDisabledTo(range)\r\n    if (hasFrom && hasTo && date < range.to && date > range.from) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * Checks if the given date should be disabled according to the specified config\r\n * @param {Date} date\r\n * @param {Object} disabledDates\r\n * @param {DateUtils} utils\r\n * @return {Boolean}\r\n */\r\n// eslint-disable-next-line complexity\r\nexport const isDateDisabled = (date, disabledDates, utils) => {\r\n  // skip if no config\r\n  if (typeof disabledDates === 'undefined') {\r\n    return false\r\n  }\r\n  const hasDisabledDays =\r\n    typeof disabledDates.days !== 'undefined' &&\r\n    disabledDates.days.indexOf(utils.getDay(date)) !== -1\r\n  const hasDisabledDates =\r\n    typeof disabledDates.daysOfMonth !== 'undefined' &&\r\n    disabledDates.daysOfMonth.indexOf(utils.getDate(date)) !== -1\r\n  const hasCustomPredictor =\r\n    typeof disabledDates.customPredictor === 'function' &&\r\n    disabledDates.customPredictor(date)\r\n  // check specific dates && heck date ranges\r\n  return !!(\r\n    checkDateSpecific(date, disabledDates, utils) ||\r\n    checkDateDisabledFromTo(date, disabledDates) ||\r\n    checkDateRange(date, disabledDates) ||\r\n    hasDisabledDays ||\r\n    hasDisabledDates ||\r\n    hasCustomPredictor\r\n  )\r\n}\r\n\r\n/**\r\n * Checks if the given month should be disabled according to the specified config\r\n * @param {Date} date\r\n * @param {Object} disabledDates\r\n * @param {DateUtils} utils\r\n * @return {Boolean}\r\n */\r\n// eslint-disable-next-line complexity,max-statements\r\nexport const isMonthDisabled = (date, disabledDates, utils) => {\r\n  // skip if no config\r\n  if (typeof disabledDates === 'undefined') {\r\n    return false\r\n  }\r\n\r\n  const hasTo = typeof disabledDates.to !== 'undefined' && disabledDates.to\r\n  const hasFrom =\r\n    typeof disabledDates.from !== 'undefined' && disabledDates.from\r\n\r\n  const isPastSameYearAndPastMonth =\r\n    hasTo &&\r\n    utils.getMonth(date) < utils.getMonth(disabledDates.to) &&\r\n    utils.getFullYear(date) <= utils.getFullYear(disabledDates.to)\r\n  const isInPastYear =\r\n    hasTo && utils.getFullYear(date) < utils.getFullYear(disabledDates.to)\r\n\r\n  const isFutureSameYearAndFutureMonth =\r\n    hasFrom &&\r\n    utils.getMonth(date) > utils.getMonth(disabledDates.from) &&\r\n    utils.getFullYear(date) >= utils.getFullYear(disabledDates.from)\r\n  const isInFutureYear =\r\n    hasFrom && utils.getFullYear(date) > utils.getFullYear(disabledDates.from)\r\n\r\n  // check if the whole month is disabled before checking every individual days\r\n  if (\r\n    (checkForDisabledTo(disabledDates) && isPastSameYearAndPastMonth) ||\r\n    isInPastYear ||\r\n    (checkForDisabledFrom(disabledDates) &&\r\n      isFutureSameYearAndFutureMonth &&\r\n      isInFutureYear)\r\n  ) {\r\n    return true\r\n  }\r\n\r\n  // now we have to check every days of the month\r\n  const daysInMonth = utils.daysInMonth(\r\n    utils.getFullYear(date),\r\n    utils.getMonth(date),\r\n  )\r\n  for (let j = 1; j <= daysInMonth; j += 1) {\r\n    const dayDate = new Date(date)\r\n    dayDate.setDate(j)\r\n    // if at least one day of this month is NOT disabled,\r\n    // we can conclude that this month SHOULD be selectable\r\n    if (!isDateDisabled(dayDate, disabledDates, utils)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Checks if the given year should be disabled according to the specified config\r\n * @param {Date} date\r\n * @param {Object} disabledDates\r\n * @param {DateUtils} utils\r\n * @return {Boolean}\r\n */\r\n// eslint-disable-next-line complexity,max-statements\r\nexport const isYearDisabled = (date, disabledDates, utils) => {\r\n  // skip if no config\r\n  if (typeof disabledDates === 'undefined' || !disabledDates) {\r\n    return false\r\n  }\r\n\r\n  const isDisabledTo =\r\n    checkForDisabledTo(disabledDates) &&\r\n    utils.getFullYear(date) < utils.getFullYear(disabledDates.to)\r\n  const isDisabledFrom =\r\n    checkForDisabledFrom(disabledDates) &&\r\n    utils.getFullYear(date) > utils.getFullYear(disabledDates.from)\r\n\r\n  // check if the whole year is disabled before checking every individual months\r\n  if (isDisabledTo || isDisabledFrom) {\r\n    return true\r\n  }\r\n\r\n  // now we have to check every months of the year\r\n  for (let j = 0; j < 12; j += 1) {\r\n    const monthDate = new Date(date)\r\n    monthDate.setMonth(j)\r\n    // if at least one month of this year is NOT disabled,\r\n    // we can conclude that this year SHOULD be selectable\r\n    if (!isMonthDisabled(monthDate, disabledDates, utils)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n","<template>\r\n  <div class=\"picker-view\">\r\n    <slot name=\"beforeCalendarHeaderDay\" />\r\n    <PickerHeader\r\n      :config=\"headerConfig\"\r\n      :next=\"nextMonth\"\r\n      :previous=\"previousMonth\"\r\n    >\r\n      <span\r\n        :class=\"allowedToShowView('month') ? 'up' : ''\"\r\n        class=\"day__month_btn\"\r\n        @click=\"showPickerCalendar('month')\"\r\n      >\r\n        {{ isYmd ? currYearName : currMonthName }}\r\n        {{ isYmd ? currMonthName : currYearName }}\r\n      </span>\r\n      <slot slot=\"nextIntervalBtn\" name=\"nextIntervalBtn\" />\r\n      <slot slot=\"prevIntervalBtn\" name=\"prevIntervalBtn\" />\r\n    </PickerHeader>\r\n    <div :class=\"isRtl ? 'flex-rtl' : ''\">\r\n      <span v-for=\"d in daysOfWeek\" :key=\"d.timestamp\" class=\"cell day-header\">\r\n        {{ d }}\r\n      </span>\r\n      <span\r\n        v-for=\"day in days\"\r\n        :key=\"day.timestamp\"\r\n        class=\"cell day\"\r\n        :class=\"dayClasses(day)\"\r\n        @click=\"selectDate(day)\"\r\n      >\r\n        {{ dayCellContent(day) }}\r\n      </span>\r\n    </div>\r\n    <slot name=\"calendarFooterDay\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport pickerMixin from '~/mixins/pickerMixin.vue'\r\nimport { isDateDisabled } from '~/utils/DisabledDatesUtils'\r\n\r\nexport default {\r\n  name: 'DatepickerDayView',\r\n  mixins: [pickerMixin],\r\n  props: {\r\n    dayCellContent: {\r\n      type: Function,\r\n      default: (day) => day.date,\r\n    },\r\n    highlighted: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      },\r\n    },\r\n    firstDayOfWeek: {\r\n      type: String,\r\n      default: 'sun',\r\n    },\r\n    showFullMonthName: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    showEdgeDates: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n  },\r\n  computed: {\r\n    /**\r\n     * Gets the name of the month the current page is on\r\n     * @return {String}\r\n     */\r\n    currMonthName() {\r\n      const monthName = this.showFullMonthName\r\n        ? this.translation.months\r\n        : this.translation.monthsAbbr\r\n      return this.utils.getMonthNameAbbr(\r\n        this.utils.getMonth(this.pageDate),\r\n        monthName,\r\n      )\r\n    },\r\n    /**\r\n     * Gets the name of the year that current page is on\r\n     * @return {Number}\r\n     */\r\n    currYearName() {\r\n      const { yearSuffix } = this.translation\r\n      return `${this.utils.getFullYear(this.pageDate)}${yearSuffix}`\r\n    },\r\n    /**\r\n     * Sets an array with all days to show this month\r\n     * @return {Array}\r\n     */\r\n    days() {\r\n      const days = []\r\n      const daysInCalendar =\r\n        this.daysFromPrevMonth + this.daysInMonth + this.daysFromNextMonth\r\n      const firstOfMonth = this.newPageDate()\r\n      const dObj = new Date(\r\n        firstOfMonth.setDate(firstOfMonth.getDate() - this.daysFromPrevMonth),\r\n      )\r\n      for (let i = 0; i < daysInCalendar; i += 1) {\r\n        days.push(this.makeDay(i, dObj))\r\n        this.utils.setDate(dObj, this.utils.getDate(dObj) + 1)\r\n      }\r\n      return days\r\n    },\r\n    /**\r\n     * Returns an array of day names\r\n     * @return {String[]}\r\n     */\r\n    daysOfWeek() {\r\n      return this.translation.getDaysStartingOn(this.firstDayOfWeekNumber)\r\n    },\r\n    /**\r\n     * Returns the number of days in this month\r\n     * @return {String[]}\r\n     */\r\n    daysInMonth() {\r\n      const dObj = this.newPageDate()\r\n      return this.utils.getDaysInMonth(dObj)\r\n    },\r\n    /**\r\n     * Calculates how many days to show from the previous month\r\n     * @return {number}\r\n     */\r\n    daysFromPrevMonth() {\r\n      const dObj = this.newPageDate()\r\n      return (7 - this.firstDayOfWeekNumber + this.utils.getDay(dObj)) % 7\r\n    },\r\n    /**\r\n     * Calculates how many days to show from the next month\r\n     * @return {number}\r\n     */\r\n    daysFromNextMonth() {\r\n      const daysThisAndPrevMonth = this.daysFromPrevMonth + this.daysInMonth\r\n      return Math.ceil(daysThisAndPrevMonth / 7) * 7 - daysThisAndPrevMonth\r\n    },\r\n    /**\r\n     * Returns first-day-of-week as a number (Sunday is 0)\r\n     * @return {Number}\r\n     */\r\n    firstDayOfWeekNumber() {\r\n      return this.utils.getDayFromAbbr(this.firstDayOfWeek)\r\n    },\r\n    /**\r\n     * Is the next month disabled?\r\n     * @return {Boolean}\r\n     */\r\n    isNextDisabled() {\r\n      if (!this.disabledDates || !this.disabledDates.from) {\r\n        return false\r\n      }\r\n      const d = this.pageDate\r\n      return (\r\n        this.utils.getMonth(this.disabledDates.from) <=\r\n          this.utils.getMonth(d) &&\r\n        this.utils.getFullYear(this.disabledDates.from) <=\r\n          this.utils.getFullYear(d)\r\n      )\r\n    },\r\n    /**\r\n     * Is the previous month disabled?\r\n     * @return {Boolean}\r\n     */\r\n    isPreviousDisabled() {\r\n      if (!this.disabledDates || !this.disabledDates.to) {\r\n        return false\r\n      }\r\n      const d = this.pageDate\r\n      return (\r\n        this.utils.getMonth(this.disabledDates.to) >= this.utils.getMonth(d) &&\r\n        this.utils.getFullYear(this.disabledDates.to) >=\r\n          this.utils.getFullYear(d)\r\n      )\r\n    },\r\n    /**\r\n     * Is this translation using year/month/day format?\r\n     * @return {Boolean}\r\n     */\r\n    isYmd() {\r\n      return this.translation.ymd && this.translation.ymd === true\r\n    },\r\n    nextPageDate() {\r\n      const d = new Date(this.pageTimestamp)\r\n      return new Date(this.utils.setMonth(d, this.utils.getMonth(d) + 1))\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * Change the page month\r\n     * @param {Number} incrementBy\r\n     */\r\n    changeMonth(incrementBy) {\r\n      const date = this.pageDate\r\n      this.utils.setMonth(date, this.utils.getMonth(date) + incrementBy)\r\n      this.$emit('changed-month', date)\r\n    },\r\n    /**\r\n     * set the class for a specific day\r\n     * @param {Object} day\r\n     * @return {Object}\r\n     */\r\n    dayClasses(day) {\r\n      return {\r\n        'selected': day.isSelected,\r\n        'disabled': day.isDisabled,\r\n        'highlighted': day.isHighlighted,\r\n        'muted': day.isPreviousMonth || day.isNextMonth,\r\n        'today': day.isToday,\r\n        'weekend': day.isWeekend,\r\n        'sat': day.isSaturday,\r\n        'sun': day.isSunday,\r\n        'highlight-start': day.isHighlightStart,\r\n        'highlight-end': day.isHighlightEnd,\r\n      }\r\n    },\r\n    /**\r\n     * @return {Number}\r\n     */\r\n    getPageMonth() {\r\n      return this.utils.getMonth(this.pageDate)\r\n    },\r\n    /**\r\n     * Whether a day is disabled\r\n     * @param {Date} date to check if disabled\r\n     * @return {Boolean}\r\n     */\r\n    isDisabledDate(date) {\r\n      return isDateDisabled(date, this.disabledDates, this.utils)\r\n    },\r\n    /**\r\n     * Whether a day is highlighted\r\n     * (only if it is not disabled already except when highlighted.includeDisabled is true)\r\n     * @param {Date} date to check if highlighted\r\n     * @return {Boolean}\r\n     */\r\n    // eslint-disable-next-line complexity,max-statements\r\n    isHighlightedDate(date) {\r\n      let highlighted = false\r\n      const dateWithoutTime = this.utils.resetDateTime(date)\r\n      if (\r\n        typeof this.highlighted === 'undefined' ||\r\n        (!(this.highlighted && this.highlighted.includeDisabled) &&\r\n          this.isDisabledDate(dateWithoutTime))\r\n      ) {\r\n        return false\r\n      }\r\n\r\n      if (typeof this.highlighted.dates !== 'undefined') {\r\n        this.highlighted.dates.forEach((d) => {\r\n          if (this.utils.compareDates(dateWithoutTime, d)) {\r\n            highlighted = true\r\n          }\r\n        })\r\n      }\r\n\r\n      const hasHighlightedTo =\r\n        typeof this.highlighted.to !== 'undefined' &&\r\n        dateWithoutTime <= this.highlighted.to\r\n\r\n      const hasHighlightedFrom =\r\n        typeof this.highlighted.from !== 'undefined' &&\r\n        dateWithoutTime >= this.highlighted.from\r\n\r\n      const hasHighlightedDays =\r\n        typeof this.highlighted.days !== 'undefined' &&\r\n        this.highlighted.days.indexOf(this.utils.getDay(dateWithoutTime)) !== -1\r\n\r\n      const hasHighlightedDaysOfMonth =\r\n        typeof this.highlighted.daysOfMonth !== 'undefined' &&\r\n        this.highlighted.daysOfMonth.indexOf(\r\n          this.utils.getDate(dateWithoutTime),\r\n        ) !== -1\r\n\r\n      const hasCustomPredictor =\r\n        typeof this.highlighted.customPredictor === 'function' &&\r\n        this.highlighted.customPredictor(dateWithoutTime)\r\n\r\n      if (\r\n        hasHighlightedDays ||\r\n        hasHighlightedDaysOfMonth ||\r\n        hasCustomPredictor ||\r\n        (hasHighlightedTo && hasHighlightedFrom)\r\n      ) {\r\n        highlighted = true\r\n      }\r\n\r\n      return highlighted\r\n    },\r\n    /**\r\n     * Whether a day is highlighted and it is the last date\r\n     * in the highlighted range of dates\r\n     * @param {Date} date end highlight\r\n     * @return {Boolean}\r\n     */\r\n    isHighlightEnd(date) {\r\n      return (\r\n        this.isHighlightedDate(date) &&\r\n        this.highlighted.to instanceof Date &&\r\n        this.utils.getFullYear(this.highlighted.to) ===\r\n          this.utils.getFullYear(date) &&\r\n        this.utils.getMonth(this.highlighted.to) ===\r\n          this.utils.getMonth(date) &&\r\n        this.utils.getDate(this.highlighted.to) === this.utils.getDate(date)\r\n      )\r\n    },\r\n    /**\r\n     * Whether a day is highlighted and it is the first date\r\n     * in the highlighted range of dates\r\n     * @param {Date} date start highlight\r\n     * @return {Boolean}\r\n     */\r\n    isHighlightStart(date) {\r\n      return (\r\n        this.isHighlightedDate(date) &&\r\n        this.highlighted.from instanceof Date &&\r\n        this.utils.getFullYear(this.highlighted.from) ===\r\n          this.utils.getFullYear(date) &&\r\n        this.utils.getMonth(this.highlighted.from) ===\r\n          this.utils.getMonth(date) &&\r\n        this.utils.getDate(this.highlighted.from) === this.utils.getDate(date)\r\n      )\r\n    },\r\n    /**\r\n     * Whether a day is selected\r\n     * @param {Date} dObj to check if selected\r\n     * @return {Boolean}\r\n     */\r\n    isSelectedDate(dObj) {\r\n      return (\r\n        this.selectedDate && this.utils.compareDates(this.selectedDate, dObj)\r\n      )\r\n    },\r\n    /**\r\n     * Defines the objects within the days array\r\n     * @param  {id}  id\r\n     * @param  {Date}  dObj\r\n     * @return {Object}\r\n     */\r\n    // eslint-disable-next-line complexity\r\n    makeDay(id, dObj) {\r\n      const isNextMonth = dObj >= this.nextPageDate\r\n      const isPreviousMonth = dObj < this.pageDate\r\n      const isSaturday = this.utils.getDay(dObj) === 6\r\n      const isSunday = this.utils.getDay(dObj) === 0\r\n      const showDate = this.showEdgeDates || !(isPreviousMonth || isNextMonth)\r\n\r\n      return {\r\n        date: showDate ? this.utils.getDate(dObj) : '',\r\n        timestamp: dObj.valueOf(),\r\n        isSelected: this.isSelectedDate(dObj),\r\n        isDisabled: showDate ? this.isDisabledDate(dObj) : true,\r\n        isHighlighted: this.isHighlightedDate(dObj),\r\n        isHighlightStart: this.isHighlightStart(dObj),\r\n        isHighlightEnd: this.isHighlightEnd(dObj),\r\n        isToday: this.utils.compareDates(dObj, new Date()),\r\n        isWeekend: isSaturday || isSunday,\r\n        isSaturday,\r\n        isSunday,\r\n        isPreviousMonth,\r\n        isNextMonth,\r\n      }\r\n    },\r\n    /**\r\n     * Set up a new date object to the first day of the current 'page'\r\n     * @return Date\r\n     */\r\n    newPageDate() {\r\n      const d = this.pageDate\r\n      return this.useUtc\r\n        ? new Date(Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), 1))\r\n        : new Date(\r\n            d.getFullYear(),\r\n            d.getMonth(),\r\n            1,\r\n            d.getHours(),\r\n            d.getMinutes(),\r\n          )\r\n    },\r\n    /**\r\n     * Increment the current page month\r\n     */\r\n    nextMonth() {\r\n      if (!this.isNextDisabled) {\r\n        this.changeMonth(+1)\r\n      }\r\n    },\r\n    /**\r\n     * Decrement the page month\r\n     */\r\n    previousMonth() {\r\n      if (!this.isPreviousDisabled) {\r\n        this.changeMonth(-1)\r\n      }\r\n    },\r\n    /**\r\n     * Emits a selectDate event\r\n     * @param {Object} date\r\n     */\r\n    selectDate(date) {\r\n      if (date.isDisabled) {\r\n        this.$emit('selected-disabled', date)\r\n      } else {\r\n        this.$emit('select-date', date)\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"picker-view\">\r\n    <slot name=\"beforeCalendarHeaderMonth\" />\r\n    <PickerHeader\r\n      :config=\"headerConfig\"\r\n      :next=\"nextYear\"\r\n      :previous=\"previousYear\"\r\n    >\r\n      <span\r\n        class=\"month__year_btn\"\r\n        :class=\"allowedToShowView('year') ? 'up' : ''\"\r\n        @click=\"showPickerCalendar('year')\"\r\n      >\r\n        {{ pageYearName }}\r\n      </span>\r\n      <slot slot=\"nextIntervalBtn\" name=\"nextIntervalBtn\" />\r\n      <slot slot=\"prevIntervalBtn\" name=\"prevIntervalBtn\" />\r\n    </PickerHeader>\r\n    <span\r\n      v-for=\"month in months\"\r\n      :key=\"month.timestamp\"\r\n      :class=\"{ selected: month.isSelected, disabled: month.isDisabled }\"\r\n      class=\"cell month\"\r\n      @click.stop=\"selectMonth(month)\"\r\n    >\r\n      {{ month.month }}\r\n    </span>\r\n    <slot name=\"calendarFooterMonth\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport pickerMixin from '~/mixins/pickerMixin.vue'\r\nimport { isMonthDisabled } from '~/utils/DisabledDatesUtils'\r\n\r\nexport default {\r\n  name: 'DatepickerMonthView',\r\n  mixins: [pickerMixin],\r\n  computed: {\r\n    /**\r\n     * Checks if the next year is disabled or not\r\n     * @return {Boolean}\r\n     */\r\n    isNextDisabled() {\r\n      if (!this.disabledDates || !this.disabledDates.from) {\r\n        return false\r\n      }\r\n      return (\r\n        this.utils.getFullYear(this.disabledDates.from) <=\r\n        this.utils.getFullYear(this.pageDate)\r\n      )\r\n    },\r\n    /**\r\n     * Checks if the previous year is disabled or not\r\n     * @return {Boolean}\r\n     */\r\n    isPreviousDisabled() {\r\n      if (!this.disabledDates || !this.disabledDates.to) {\r\n        return false\r\n      }\r\n      return (\r\n        this.utils.getFullYear(this.disabledDates.to) >=\r\n        this.utils.getFullYear(this.pageDate)\r\n      )\r\n    },\r\n    /**\r\n     * Set an array with all months\r\n     * @return {Array}\r\n     */\r\n    months() {\r\n      const d = this.pageDate\r\n      const months = []\r\n      // set up a new date object to the beginning of the current 'page'\r\n      const dObj = this.useUtc\r\n        ? new Date(Date.UTC(d.getUTCFullYear(), 0, d.getUTCDate()))\r\n        : new Date(\r\n            d.getFullYear(),\r\n            0,\r\n            d.getDate(),\r\n            d.getHours(),\r\n            d.getMinutes(),\r\n          )\r\n      for (let i = 0; i < 12; i += 1) {\r\n        months.push({\r\n          month: this.utils.getMonthName(i, this.translation.months),\r\n          timestamp: dObj.valueOf(),\r\n          isSelected: this.isSelectedMonth(dObj),\r\n          isDisabled: this.isDisabledMonth(dObj),\r\n        })\r\n        this.utils.setMonth(dObj, this.utils.getMonth(dObj) + 1)\r\n      }\r\n      return months\r\n    },\r\n    /**\r\n     * Get year name on current page.\r\n     * @return {String}\r\n     */\r\n    pageYearName() {\r\n      const { yearSuffix } = this.translation\r\n      return `${this.utils.getFullYear(this.pageDate)}${yearSuffix}`\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * Changes the year up or down\r\n     * @param {Number} incrementBy\r\n     */\r\n    changeYear(incrementBy) {\r\n      const date = this.pageDate\r\n      this.utils.setFullYear(date, this.utils.getFullYear(date) + incrementBy)\r\n      this.$emit('changed-year', date)\r\n    },\r\n    /**\r\n     * Whether a month is disabled\r\n     * @param {Date} date\r\n     * @return {Boolean}\r\n     */\r\n    isDisabledMonth(date) {\r\n      return isMonthDisabled(date, this.disabledDates, this.utils)\r\n    },\r\n    /**\r\n     * Whether the selected date is in this month\r\n     * @param {Date} date\r\n     * @return {Boolean}\r\n     */\r\n    isSelectedMonth(date) {\r\n      return (\r\n        this.selectedDate &&\r\n        this.utils.getFullYear(this.selectedDate) ===\r\n          this.utils.getFullYear(date) &&\r\n        this.utils.getMonth(this.selectedDate) === this.utils.getMonth(date)\r\n      )\r\n    },\r\n    /**\r\n     * Increments the year\r\n     */\r\n    nextYear() {\r\n      if (!this.isNextDisabled) {\r\n        this.changeYear(1)\r\n      }\r\n    },\r\n    /**\r\n     * Decrements the year\r\n     */\r\n    previousYear() {\r\n      if (!this.isPreviousDisabled) {\r\n        this.changeYear(-1)\r\n      }\r\n    },\r\n    /**\r\n     * Emits a selectMonth event\r\n     * @param {Object} month\r\n     */\r\n    selectMonth(month) {\r\n      if (!month.isDisabled) {\r\n        this.$emit('select-month', month)\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"picker-view\">\r\n    <slot name=\"beforeCalendarHeaderYear\" />\r\n    <PickerHeader\r\n      :config=\"headerConfig\"\r\n      :next=\"nextDecade\"\r\n      :previous=\"previousDecade\"\r\n    >\r\n      <span>\r\n        {{ getPageDecade }}\r\n      </span>\r\n      <slot slot=\"nextIntervalBtn\" name=\"nextIntervalBtn\" />\r\n      <slot slot=\"prevIntervalBtn\" name=\"prevIntervalBtn\" />\r\n    </PickerHeader>\r\n\r\n    <span\r\n      v-for=\"year in years\"\r\n      :key=\"year.timestamp\"\r\n      :class=\"{ selected: year.isSelected, disabled: year.isDisabled }\"\r\n      class=\"cell year\"\r\n      @click.stop=\"selectYear(year)\"\r\n    >\r\n      {{ year.year }}\r\n    </span>\r\n    <slot name=\"calendarFooterYear\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport pickerMixin from '~/mixins/pickerMixin.vue'\r\nimport { isYearDisabled } from '~/utils/DisabledDatesUtils'\r\n\r\nexport default {\r\n  name: 'DatepickerYearView',\r\n  mixins: [pickerMixin],\r\n  props: {\r\n    yearRange: {\r\n      type: Number,\r\n      default: 10,\r\n    },\r\n  },\r\n  computed: {\r\n    /**\r\n     * Checks if the next decade is disabled or not\r\n     * @return {Boolean}\r\n     */\r\n    isNextDisabled() {\r\n      if (!this.disabledDates || !this.disabledDates.from) {\r\n        return false\r\n      }\r\n      const yearFrom = this.utils.getFullYear(this.disabledDates.from)\r\n      const lastCellYear = this.years[this.years.length - 1].year\r\n\r\n      return yearFrom <= lastCellYear\r\n    },\r\n    /**\r\n     * Checks if the previous decade is disabled or not\r\n     * @return {Boolean}\r\n     */\r\n    isPreviousDisabled() {\r\n      if (!this.disabledDates || !this.disabledDates.to) {\r\n        return false\r\n      }\r\n      const yearTo = this.utils.getFullYear(this.disabledDates.to)\r\n      const yearPageDate = this.utils.getFullYear(this.pageDate)\r\n\r\n      return (\r\n        Math.floor(yearTo / this.yearRange) * this.yearRange >=\r\n        Math.floor(yearPageDate / this.yearRange) * this.yearRange\r\n      )\r\n    },\r\n    /**\r\n     * Get decade name on current page.\r\n     * @return {String}\r\n     */\r\n    getPageDecade() {\r\n      const yearPageDate = this.utils.getFullYear(this.pageDate)\r\n\r\n      const decadeStart =\r\n        Math.floor(yearPageDate / this.yearRange) * this.yearRange\r\n      const decadeEnd = decadeStart + (this.yearRange - 1)\r\n      const { yearSuffix } = this.translation\r\n      return `${decadeStart} - ${decadeEnd}${yearSuffix}`\r\n    },\r\n    /**\r\n     * Set an array with years for a decade\r\n     * @return {Array}\r\n     */\r\n    years() {\r\n      const d = this.pageDate\r\n      const years = []\r\n      const year = this.useUtc\r\n        ? Math.floor(d.getUTCFullYear() / this.yearRange) * this.yearRange\r\n        : Math.floor(d.getFullYear() / this.yearRange) * this.yearRange\r\n\r\n      // set up a new date object to the beginning of the current 'page'7\r\n      const dObj = this.useUtc\r\n        ? new Date(Date.UTC(year, d.getUTCMonth(), d.getUTCDate()))\r\n        : new Date(\r\n            year,\r\n            d.getMonth(),\r\n            d.getDate(),\r\n            d.getHours(),\r\n            d.getMinutes(),\r\n          )\r\n      for (let i = 0; i < this.yearRange; i += 1) {\r\n        years.push({\r\n          year: this.utils.getFullYear(dObj),\r\n          timestamp: dObj.valueOf(),\r\n          isSelected: this.isSelectedYear(dObj),\r\n          isDisabled: this.isDisabledYear(dObj),\r\n        })\r\n        this.utils.setFullYear(dObj, this.utils.getFullYear(dObj) + 1)\r\n      }\r\n      return years\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * Changes the year up or down\r\n     * @param {Number} incrementBy\r\n     */\r\n    changeYear(incrementBy) {\r\n      const date = this.pageDate\r\n      this.utils.setFullYear(date, this.utils.getFullYear(date) + incrementBy)\r\n      this.$emit('changed-decade', date)\r\n    },\r\n    /**\r\n     * Whether a year is disabled\r\n     * @param {Date} date\r\n     * @return {Boolean}\r\n     */\r\n    isDisabledYear(date) {\r\n      return isYearDisabled(date, this.disabledDates, this.utils)\r\n    },\r\n    /**\r\n     * Whether the selected date is in this year\r\n     * @param {Date} date\r\n     * @return {Boolean}\r\n     */\r\n    isSelectedYear(date) {\r\n      return (\r\n        this.selectedDate &&\r\n        this.utils.getFullYear(this.selectedDate) ===\r\n          this.utils.getFullYear(date)\r\n      )\r\n    },\r\n    /**\r\n     * Increments the decade\r\n     */\r\n    nextDecade() {\r\n      if (!this.isNextDisabled) {\r\n        this.changeYear(this.yearRange)\r\n      }\r\n    },\r\n    /**\r\n     * Decrements the decade\r\n     */\r\n    previousDecade() {\r\n      if (!this.isPreviousDisabled) {\r\n        this.changeYear(-this.yearRange)\r\n      }\r\n    },\r\n    /**\r\n     * Emits a selectYear event\r\n     * @param {Object} year\r\n     */\r\n    selectYear(year) {\r\n      if (!year.isDisabled) {\r\n        this.$emit('select-year', year)\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n","/* eslint no-param-reassign: 0 */\r\n/**\r\n * get the hidden element width, height\r\n * @param {HTMLElement} element dom\r\n */\r\nexport function getPopupElementSize(element) {\r\n  const originalDisplay = element.style.display\r\n  const originalVisibility = element.style.visibility\r\n  element.style.display = 'block'\r\n  element.style.visibility = 'hidden'\r\n  const styles = window.getComputedStyle(element)\r\n  const width =\r\n    element.offsetWidth +\r\n    parseInt(styles.marginLeft, 10) +\r\n    parseInt(styles.marginRight, 10)\r\n  const height =\r\n    element.offsetHeight +\r\n    parseInt(styles.marginTop, 10) +\r\n    parseInt(styles.marginBottom, 10)\r\n  element.style.display = originalDisplay\r\n  element.style.visibility = originalVisibility\r\n\r\n  return {\r\n    width,\r\n    height,\r\n  }\r\n}\r\n\r\n/**\r\n * get the popup position\r\n * @param {Element} el element\r\n * @param {Element} elRelative relative element\r\n * @param {Number} targetWidth target element's width\r\n * @param {Number} targetHeight target element's height\r\n * @param {Boolean} appendToBody\r\n * @param {String} fixedPosition\r\n * @param {Boolean} rtl\r\n */\r\n// eslint-disable-next-line complexity,max-statements\r\nexport function getRelativePosition({\r\n  el,\r\n  elRelative,\r\n  targetWidth,\r\n  targetHeight,\r\n  appendToBody,\r\n  fixedPosition,\r\n  rtl,\r\n}) {\r\n  let left = 0\r\n  let top = 0\r\n  let offsetX = 0\r\n  let offsetY = 0\r\n  const relativeRect = elRelative.getBoundingClientRect()\r\n  const documentWidth = document.documentElement.clientWidth\r\n  const documentHeight = document.documentElement.clientHeight\r\n  if (appendToBody) {\r\n    offsetX = window.pageXOffset + relativeRect.left\r\n    offsetY = window.pageYOffset + relativeRect.top\r\n  }\r\n\r\n  const calendarBounding = el.getBoundingClientRect()\r\n  const outOfBoundsRight = calendarBounding.right > window.innerWidth\r\n  const outOfBoundsBottom = calendarBounding.bottom > window.innerHeight\r\n\r\n  const fixedPositionRight =\r\n    fixedPosition && fixedPosition.indexOf('right') !== -1\r\n  const fixedPositionTop = fixedPosition && fixedPosition.indexOf('top') !== -1\r\n\r\n  const setLeft = () => {\r\n    left = offsetX\r\n  }\r\n  const setRight = () => {\r\n    left = offsetX + relativeRect.width - targetWidth\r\n  }\r\n  const setBottom = () => {\r\n    top = offsetY + relativeRect.height\r\n  }\r\n  const setTop = () => {\r\n    top = offsetY - targetHeight\r\n  }\r\n\r\n  if (fixedPosition === '') {\r\n    if (outOfBoundsRight || rtl) {\r\n      setRight()\r\n    } else {\r\n      setLeft()\r\n    }\r\n\r\n    if (outOfBoundsBottom) {\r\n      setTop()\r\n    } else {\r\n      setBottom()\r\n    }\r\n\r\n    const hasRelativWidth =\r\n      documentWidth - relativeRect.left < targetWidth &&\r\n      relativeRect.right < targetWidth\r\n\r\n    const hasRelativHeight =\r\n      relativeRect.top <= targetHeight &&\r\n      documentHeight - relativeRect.bottom <= targetHeight\r\n\r\n    if (hasRelativWidth) {\r\n      left = offsetX - relativeRect.left + 1\r\n    }\r\n\r\n    if (hasRelativHeight) {\r\n      top = offsetY + documentHeight - relativeRect.top - targetHeight\r\n    }\r\n  } else {\r\n    if (fixedPositionRight) {\r\n      setRight()\r\n    } else {\r\n      setLeft()\r\n    }\r\n\r\n    if (fixedPositionTop) {\r\n      setTop()\r\n    } else {\r\n      setBottom()\r\n    }\r\n  }\r\n\r\n  return {\r\n    left: `${left}px`,\r\n    top: `${top}px`,\r\n  }\r\n}\r\n","<script>\r\nimport { getPopupElementSize, getRelativePosition } from '~/utils/dom'\r\n\r\nexport default {\r\n  name: 'Popup',\r\n  props: {\r\n    appendToBody: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    fixedPosition: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    inline: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    rtl: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    visible: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      popupRect: null,\r\n    }\r\n  },\r\n  watch: {\r\n    visible: {\r\n      immediate: true,\r\n      handler(val) {\r\n        this.$nextTick(() => {\r\n          if (val) {\r\n            this.displayPopup()\r\n          }\r\n        })\r\n      },\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.inline) {\r\n      return\r\n    }\r\n    if (this.appendToBody) {\r\n      document.body.appendChild(this.$el)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    if (this.inline) {\r\n      return\r\n    }\r\n    if (this.appendToBody && this.$el.parentNode) {\r\n      this.$el.parentNode.removeChild(this.$el)\r\n    }\r\n  },\r\n  methods: {\r\n    setTopStyle() {\r\n      if (this.appendToBody) {\r\n        const relativeRect = this.$parent.$el.getBoundingClientRect()\r\n        this.$el.style.top = `${relativeRect.bottom + window.scrollY}px`\r\n      }\r\n    },\r\n    displayPopup() {\r\n      if (this.inline || !this.visible) return\r\n      this.setTopStyle()\r\n      const popup = this.$el\r\n      const relativeElement = this.$parent.$el\r\n      if (!this.popupRect) {\r\n        this.popupRect = getPopupElementSize(popup)\r\n      }\r\n      const { width, height } = this.popupRect\r\n      const { left, top } = getRelativePosition({\r\n        el: popup,\r\n        elRelative: relativeElement,\r\n        targetWidth: width,\r\n        targetHeight: height,\r\n        appendToBody: this.appendToBody,\r\n        fixedPosition: this.fixedPosition,\r\n        rtl: this.rtl,\r\n      })\r\n\r\n      this.$el.style.left = left\r\n      this.$el.style.top = top\r\n    },\r\n  },\r\n  render() {\r\n    return this.$slots.default\r\n  },\r\n}\r\n</script>\r\n","<template>\r\n  <div :class=\"[wrapperClass, isRtl ? 'rtl' : '']\" class=\"vdp-datepicker\">\r\n    <DateInput\r\n      :id=\"id\"\r\n      :autofocus=\"autofocus\"\r\n      :bootstrap-styling=\"bootstrapStyling\"\r\n      :calendar-button=\"calendarButton\"\r\n      :calendar-button-icon=\"calendarButtonIcon\"\r\n      :calendar-button-icon-content=\"calendarButtonIconContent\"\r\n      :clear-button=\"clearButton\"\r\n      :clear-button-icon=\"clearButtonIcon\"\r\n      :disabled=\"disabled\"\r\n      :format=\"format\"\r\n      :inline=\"inline\"\r\n      :is-open=\"isOpen\"\r\n      :input-class=\"inputClass\"\r\n      :maxlength=\"maxlength\"\r\n      :name=\"name\"\r\n      :parser=\"parser\"\r\n      :pattern=\"pattern\"\r\n      :placeholder=\"placeholder\"\r\n      :ref-name=\"refName\"\r\n      :required=\"required\"\r\n      :reset-typed-date=\"resetTypedDate\"\r\n      :selected-date=\"selectedDate\"\r\n      :show-calendar-on-button-click=\"showCalendarOnButtonClick\"\r\n      :show-calendar-on-focus=\"showCalendarOnFocus\"\r\n      :tabindex=\"tabindex\"\r\n      :translation=\"translation\"\r\n      :typeable=\"typeable\"\r\n      :use-utc=\"useUtc\"\r\n      @blur=\"onBlur\"\r\n      @clear-date=\"clearDate\"\r\n      @close-calendar=\"close\"\r\n      @focus=\"onFocus\"\r\n      @show-calendar=\"showCalendar\"\r\n      @typed-date=\"setTypedDate\"\r\n    >\r\n      <slot slot=\"beforeDateInput\" name=\"beforeDateInput\" />\r\n      <slot slot=\"afterDateInput\" name=\"afterDateInput\" />\r\n    </DateInput>\r\n\r\n    <Popup\r\n      ref=\"popup\"\r\n      :append-to-body=\"appendToBody\"\r\n      :fixed-position=\"fixedPosition\"\r\n      :inline=\"inline\"\r\n      :rtl=\"isRtl\"\r\n      :visible=\"isOpen\"\r\n    >\r\n      <div\r\n        v-if=\"isOpen\"\r\n        ref=\"datepicker\"\r\n        :class=\"pickerClasses\"\r\n        @mousedown.prevent\r\n      >\r\n        <template v-if=\"isOpen\">\r\n          <slot name=\"beforeCalendarHeader\" />\r\n          <Component\r\n            :is=\"currentPicker\"\r\n            :allowed-to-show-view=\"allowedToShowView\"\r\n            :day-cell-content=\"dayCellContent\"\r\n            :disabled-dates=\"disabledDates\"\r\n            :first-day-of-week=\"firstDayOfWeek\"\r\n            :highlighted=\"highlighted\"\r\n            :is-rtl=\"isRtl\"\r\n            :page-date=\"pageDate\"\r\n            :page-timestamp=\"pageTimestamp\"\r\n            :selected-date=\"selectedDate\"\r\n            :show-edge-dates=\"showEdgeDates\"\r\n            :show-full-month-name=\"fullMonthName\"\r\n            :show-header=\"showHeader\"\r\n            :translation=\"translation\"\r\n            :use-utc=\"useUtc\"\r\n            :year-range=\"yearPickerRange\"\r\n            @select-date=\"selectDate\"\r\n            @changed-month=\"handleChangedMonthFromDayPicker\"\r\n            @selected-disabled=\"selectDisabledDate\"\r\n            @select-month=\"selectMonth\"\r\n            @changed-year=\"setPageDate\"\r\n            @show-month-calendar=\"showSpecificCalendar('Month')\"\r\n            @select-year=\"selectYear\"\r\n            @changed-decade=\"setPageDate\"\r\n            @show-year-calendar=\"showSpecificCalendar('Year')\"\r\n          >\r\n            <template v-for=\"slotKey of calendarSlots\">\r\n              <slot :slot=\"slotKey\" :name=\"slotKey\" />\r\n            </template>\r\n          </Component>\r\n          <slot name=\"calendarFooter\" />\r\n        </template>\r\n      </div>\r\n    </Popup>\r\n  </div>\r\n</template>\r\n<script>\r\nimport en from '~/locale/translations/en'\r\nimport { makeDateUtils } from '~/utils/DateUtils'\r\nimport calendarSlots from '~/utils/calendarSlots'\r\nimport DateInput from '~/components/DateInput.vue'\r\nimport inputProps from '~/mixins/inputProps.vue'\r\nimport PickerDay from '~/components/PickerDay.vue'\r\nimport PickerMonth from '~/components/PickerMonth.vue'\r\nimport PickerYear from '~/components/PickerYear.vue'\r\nimport Popup from '~/components/Popup.vue'\r\n\r\nconst validDate = (val) =>\r\n  val === null ||\r\n  val instanceof Date ||\r\n  typeof val === 'string' ||\r\n  typeof val === 'number'\r\n\r\nexport default {\r\n  name: 'Datepicker',\r\n  components: {\r\n    DateInput,\r\n    PickerDay,\r\n    PickerMonth,\r\n    PickerYear,\r\n    Popup,\r\n  },\r\n  mixins: [inputProps],\r\n  props: {\r\n    appendToBody: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    calendarClass: {\r\n      type: [String, Object, Array],\r\n      default: '',\r\n    },\r\n    dayCellContent: {\r\n      type: Function,\r\n      default: (day) => day.date,\r\n    },\r\n    disabledDates: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      },\r\n    },\r\n    firstDayOfWeek: {\r\n      type: String,\r\n      default: 'sun',\r\n    },\r\n    fixedPosition: {\r\n      type: String,\r\n      default: '',\r\n      validator: (val) => {\r\n        const possibleValues = [\r\n          '',\r\n          'bottom',\r\n          'bottom-left',\r\n          'bottom-right',\r\n          'top',\r\n          'top-left',\r\n          'top-right',\r\n        ]\r\n        return possibleValues.includes(val)\r\n      },\r\n    },\r\n    fullMonthName: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    highlighted: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      },\r\n    },\r\n    initialView: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    language: {\r\n      type: Object,\r\n      default: () => en,\r\n    },\r\n    maximumView: {\r\n      type: String,\r\n      default: 'year',\r\n    },\r\n    minimumView: {\r\n      type: String,\r\n      default: 'day',\r\n    },\r\n    showEdgeDates: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    showHeader: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    value: {\r\n      type: [String, Date, Number],\r\n      default: '',\r\n      validator: validDate,\r\n    },\r\n    wrapperClass: {\r\n      type: [String, Object, Array],\r\n      default: '',\r\n    },\r\n    yearPickerRange: {\r\n      type: Number,\r\n      default: 10,\r\n    },\r\n  },\r\n  data() {\r\n    // const startDate = this.openDate ? new Date(this.openDate) : new Date()\r\n    const constructedDateUtils = makeDateUtils(this.useUtc)\r\n    let startDate\r\n    if (this.openDate) {\r\n      startDate = constructedDateUtils.getNewDateObject(this.openDate)\r\n    } else {\r\n      startDate = constructedDateUtils.getNewDateObject()\r\n    }\r\n    const pageTimestamp = constructedDateUtils.setDate(startDate, 1)\r\n    return {\r\n      /*\r\n       * Positioning\r\n       */\r\n      calendarHeight: 0,\r\n      calendarSlots,\r\n      currentPicker: '',\r\n      /*\r\n       * Vue cannot observe changes to a Date Object so date must be stored as a timestamp\r\n       * This represents the first day of the current viewing month\r\n       * {Number}\r\n       */\r\n      pageTimestamp,\r\n      resetTypedDate: constructedDateUtils.getNewDateObject(),\r\n      /*\r\n       * Selected Date\r\n       * {Date}\r\n       */\r\n      selectedDate: null,\r\n      utils: constructedDateUtils,\r\n    }\r\n  },\r\n  computed: {\r\n    computedInitialView() {\r\n      return this.initialView ? this.initialView : this.minimumView\r\n    },\r\n    isInline() {\r\n      return !!this.inline\r\n    },\r\n    isOpen() {\r\n      return this.currentPicker !== ''\r\n    },\r\n    isRtl() {\r\n      return this.translation.rtl === true\r\n    },\r\n    pageDate() {\r\n      return new Date(this.pageTimestamp)\r\n    },\r\n    pickerClasses() {\r\n      return [\r\n        this.calendarClass,\r\n        'vdp-datepicker__calendar',\r\n        this.isInline && 'inline',\r\n        this.isRtl && this.appendToBody && 'rtl',\r\n      ]\r\n    },\r\n    translation() {\r\n      return this.language\r\n    },\r\n  },\r\n  watch: {\r\n    initialView() {\r\n      this.setInitialView()\r\n    },\r\n    openDate() {\r\n      this.setPageDate()\r\n    },\r\n    value(value) {\r\n      this.setValue(value)\r\n    },\r\n  },\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    /**\r\n     * Are we allowed to show a specific picker view?\r\n     * @param {String} view\r\n     * @return {Boolean}\r\n     */\r\n    allowedToShowView(view) {\r\n      const views = ['day', 'month', 'year']\r\n      const minimumViewIndex = views.indexOf(this.minimumView)\r\n      const maximumViewIndex = views.indexOf(this.maximumView)\r\n      const viewIndex = views.indexOf(view)\r\n\r\n      return viewIndex >= minimumViewIndex && viewIndex <= maximumViewIndex\r\n    },\r\n    /**\r\n     * Clear the selected date\r\n     */\r\n    clearDate() {\r\n      this.selectedDate = null\r\n      this.setPageDate()\r\n      this.$emit('selected', null)\r\n      this.$emit('input', null)\r\n      this.$emit('cleared')\r\n    },\r\n    /**\r\n     * Close the calendar views\r\n     */\r\n    close() {\r\n      if (!this.isInline) {\r\n        this.currentPicker = ''\r\n        this.$emit('closed')\r\n      }\r\n    },\r\n    /**\r\n     * Handles a month change from the day picker\r\n     */\r\n    handleChangedMonthFromDayPicker(date) {\r\n      this.setPageDate(date)\r\n      this.$emit('changed-month', date)\r\n    },\r\n    /**\r\n     * Initiate the component\r\n     */\r\n    init() {\r\n      if (this.value) {\r\n        this.setValue(this.value)\r\n      }\r\n      if (this.isInline) {\r\n        this.setInitialView()\r\n      }\r\n    },\r\n    /**\r\n     * Emits a 'blur' event\r\n     */\r\n    onBlur() {\r\n      this.$emit('blur')\r\n    },\r\n    /**\r\n     * Emits a 'focus' event\r\n     */\r\n    onFocus() {\r\n      this.$emit('focus')\r\n    },\r\n    /**\r\n     * Called in the event that the user navigates to date pages and\r\n     * closes the picker without selecting a date.\r\n     */\r\n    resetDefaultPageDate() {\r\n      if (this.selectedDate === null) {\r\n        this.setPageDate()\r\n        return\r\n      }\r\n      this.setPageDate(this.selectedDate)\r\n    },\r\n    /**\r\n     * Set the selected date\r\n     * @param {Number} timestamp\r\n     */\r\n    setDate(timestamp) {\r\n      const date = new Date(timestamp)\r\n      this.selectedDate = date\r\n      this.setPageDate(date)\r\n      this.$emit('selected', date)\r\n      this.$emit('input', date)\r\n    },\r\n    /**\r\n     * Sets the initial picker page view: day, month or year\r\n     */\r\n    setInitialView() {\r\n      const initialView = this.computedInitialView\r\n      if (!this.allowedToShowView(initialView)) {\r\n        throw new Error(\r\n          `initialView '${this.initialView}' cannot be rendered based on minimum '${this.minimumView}' and maximum '${this.maximumView}'`,\r\n        )\r\n      }\r\n      switch (initialView) {\r\n        case 'year':\r\n          this.showSpecificCalendar('Year')\r\n          break\r\n        case 'month':\r\n          this.showSpecificCalendar('Month')\r\n          break\r\n        default:\r\n          this.showSpecificCalendar('Day')\r\n          break\r\n      }\r\n    },\r\n    /**\r\n     * Sets the date that the calendar should open on\r\n     */\r\n    setPageDate(date) {\r\n      let dateTemp = date\r\n      if (!dateTemp) {\r\n        if (this.openDate) {\r\n          dateTemp = new Date(this.openDate)\r\n        } else {\r\n          dateTemp = new Date()\r\n        }\r\n        dateTemp = this.utils.resetDateTime(dateTemp)\r\n      }\r\n      this.pageTimestamp = this.utils.setDate(new Date(dateTemp), 1)\r\n    },\r\n    /**\r\n     * Set the date from a typedDate event\r\n     */\r\n    setTypedDate(date) {\r\n      this.setDate(date.valueOf())\r\n    },\r\n    /**\r\n     * Set the datepicker value\r\n     * @param {Date|String|Number|null} date\r\n     */\r\n    setValue(date) {\r\n      let dateTemp = date\r\n      if (typeof dateTemp === 'string' || typeof dateTemp === 'number') {\r\n        const parsed = new Date(dateTemp)\r\n        dateTemp = Number.isNaN(parsed.valueOf()) ? null : parsed\r\n      }\r\n      if (!dateTemp) {\r\n        this.setPageDate()\r\n        this.selectedDate = null\r\n        return\r\n      }\r\n      this.selectedDate = dateTemp\r\n      this.setPageDate(dateTemp)\r\n    },\r\n    /**\r\n     * @param {Object} date\r\n     */\r\n    selectDate(date) {\r\n      this.resetTypedDate = this.utils.getNewDateObject()\r\n      this.close()\r\n      this.setDate(date.timestamp)\r\n    },\r\n    /**\r\n     * @param {Object} date\r\n     */\r\n    selectDisabledDate(date) {\r\n      this.$emit('selected-disabled', date)\r\n    },\r\n    /**\r\n     * @param {Object} month\r\n     */\r\n    selectMonth(month) {\r\n      const date = new Date(month.timestamp)\r\n      if (this.allowedToShowView('day')) {\r\n        this.setPageDate(date)\r\n        this.$emit('changed-month', month)\r\n        this.showSpecificCalendar('Day')\r\n      } else {\r\n        this.selectDate(month)\r\n      }\r\n    },\r\n    /**\r\n     * @param {Object} year\r\n     */\r\n    selectYear(year) {\r\n      const date = new Date(year.timestamp)\r\n      if (this.allowedToShowView('month')) {\r\n        this.setPageDate(date)\r\n        this.$emit('changed-year', year)\r\n        this.showSpecificCalendar('Month')\r\n      } else {\r\n        this.selectDate(year)\r\n      }\r\n    },\r\n    /**\r\n     * Shows the calendar at the relevant view: 'day', 'month', or 'year'\r\n     */\r\n    showCalendar() {\r\n      if (this.disabled || this.isInline) {\r\n        return\r\n      }\r\n      this.setInitialView()\r\n      this.$emit('opened')\r\n    },\r\n    /**\r\n     * Show a specific picker\r\n     */\r\n    showSpecificCalendar(type) {\r\n      if (this.allowedToShowView(type.toLowerCase())) {\r\n        this.currentPicker = `Picker${type}`\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../styles/style.scss';\r\n</style>\r\n"],"names":["Language","constructor","language","months","monthsAbbr","days","rtl","ymd","yearSuffix","_language","TypeError","_months","length","RangeError","_monthsAbbr","_days","getDaysStartingOn","firstDayOfWeek","firstDays","slice","lastDays","concat","getMonthByAbbrName","name","monthValue","findIndex","month","getMonthByName","getParsedDate","formatStr","dateStr","translation","splitter","match","df","split","ds","i","test","tmp","replace","utils","useUtc","getFullYear","date","getUTCFullYear","getMonth","getUTCMonth","getDaysInMonth","daysInMonth","getDate","getUTCDate","getDay","getUTCDay","getHours","getUTCHours","getMinutes","getUTCMinutes","setFullYear","value","setUTCFullYear","setMonth","setUTCMonth","setDate","setUTCDate","compareDates","date1","date2","d1","Date","valueOf","d2","resetDateTime","isValidDate","Object","prototype","toString","call","Number","isNaN","getDayNameAbbr","getDayFromAbbr","abbr","en","toLowerCase","getMonthName","Error","getMonthNameAbbr","year","getNthSuffix","day","formatDate","translationTemp","matches","dd","d","yyyy","yy","String","MMMM","MMM","MM","M","o","E","REGEX_FORMAT","parseDate","parser","dat","join","getTime","parse","time","createDateArray","start","end","dates","startTemp","push","setUTCHours","setHours","getNewDateObject","makeDateUtils","checkForDisabledTo","disabledDates","to","checkForDisabledFrom","from","checkDateSpecific","hasDates","checkDateDisabledFromTo","isDisabledTo","isDisabledFrom","checkDateRange","hasRange","ranges","range","hasFrom","hasTo","isDateDisabled","hasDisabledDays","indexOf","hasDisabledDates","daysOfMonth","hasCustomPredictor","customPredictor","isMonthDisabled","isPastSameYearAndPastMonth","isInPastYear","isFutureSameYearAndFutureMonth","isInFutureYear","j","dayDate","isYearDisabled","monthDate","getPopupElementSize","element","originalDisplay","style","display","originalVisibility","visibility","styles","window","getComputedStyle","width","offsetWidth","parseInt","marginLeft","marginRight","height","offsetHeight","marginTop","marginBottom","getRelativePosition","el","elRelative","targetWidth","targetHeight","appendToBody","fixedPosition","left","top","offsetX","offsetY","relativeRect","getBoundingClientRect","documentWidth","document","documentElement","clientWidth","documentHeight","clientHeight","pageXOffset","pageYOffset","calendarBounding","outOfBoundsRight","right","innerWidth","outOfBoundsBottom","bottom","innerHeight","fixedPositionRight","fixedPositionTop","setLeft","setRight","setBottom","setTop","hasRelativWidth","hasRelativHeight"],"mappings":"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"}