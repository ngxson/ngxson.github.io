'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule(fn, basedir, module) {
	return module = {
		path: basedir,
		exports: {},
		require: function (path, base) {
			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
		}
	}, fn(module, module.exports), module.exports;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var check = function (it) {
  return it && it.Math == Math && it;
}; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028


var global_1 = // eslint-disable-next-line no-undef
check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) || check(typeof self == 'object' && self) || check(typeof commonjsGlobal == 'object' && commonjsGlobal) || // eslint-disable-next-line no-new-func
function () {
  return this;
}() || Function('return this')();

var fails = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var descriptors = !fails(function () {
  return Object.defineProperty({}, 1, {
    get: function () {
      return 7;
    }
  })[1] != 7;
});

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug

var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({
  1: 2
}, 1); // `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable

var f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;
var objectPropertyIsEnumerable = {
  f: f
};

var createPropertyDescriptor = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var toString = {}.toString;

var classofRaw = function (it) {
  return toString.call(it).slice(8, -1);
};

var split = ''.split; // fallback for non-array-like ES3 and non-enumerable old V8 strings

var indexedObject = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classofRaw(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};

var toIndexedObject = function (it) {
  return indexedObject(requireObjectCoercible(it));
};

var isObject = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string

var toPrimitive = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var hasOwnProperty = {}.hasOwnProperty;

var has = function (it, key) {
  return hasOwnProperty.call(it, key);
};

var document$1 = global_1.document; // typeof document.createElement is 'object' in old IE

var EXISTS = isObject(document$1) && isObject(document$1.createElement);

var documentCreateElement = function (it) {
  return EXISTS ? document$1.createElement(it) : {};
};

var ie8DomDefine = !descriptors && !fails(function () {
  return Object.defineProperty(documentCreateElement('div'), 'a', {
    get: function () {
      return 7;
    }
  }).a != 7;
});

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor

var f$1 = descriptors ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (ie8DomDefine) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) {
    /* empty */
  }
  if (has(O, P)) return createPropertyDescriptor(!objectPropertyIsEnumerable.f.call(O, P), O[P]);
};
var objectGetOwnPropertyDescriptor = {
  f: f$1
};

var anObject = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  }

  return it;
};

var nativeDefineProperty = Object.defineProperty; // `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty

var f$2 = descriptors ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (ie8DomDefine) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) {
    /* empty */
  }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};
var objectDefineProperty = {
  f: f$2
};

var createNonEnumerableProperty = descriptors ? function (object, key, value) {
  return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var setGlobal = function (key, value) {
  try {
    createNonEnumerableProperty(global_1, key, value);
  } catch (error) {
    global_1[key] = value;
  }

  return value;
};

var SHARED = '__core-js_shared__';
var store = global_1[SHARED] || setGlobal(SHARED, {});
var sharedStore = store;

var functionToString = Function.toString; // this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper

if (typeof sharedStore.inspectSource != 'function') {
  sharedStore.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

var inspectSource = sharedStore.inspectSource;

var WeakMap = global_1.WeakMap;
var nativeWeakMap = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));

var shared = createCommonjsModule(function (module) {
  (module.exports = function (key, value) {
    return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {});
  })('versions', []).push({
    version: '3.7.0',
    mode:  'global',
    copyright: 'Â© 2020 Denis Pushkarev (zloirock.ru)'
  });
});

var id = 0;
var postfix = Math.random();

var uid = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};

var keys = shared('keys');

var sharedKey = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

var hiddenKeys = {};

var WeakMap$1 = global_1.WeakMap;
var set, get, has$1;

var enforce = function (it) {
  return has$1(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;

    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    }

    return state;
  };
};

if (nativeWeakMap) {
  var store$1 = sharedStore.state || (sharedStore.state = new WeakMap$1());
  var wmget = store$1.get;
  var wmhas = store$1.has;
  var wmset = store$1.set;

  set = function (it, metadata) {
    metadata.facade = it;
    wmset.call(store$1, it, metadata);
    return metadata;
  };

  get = function (it) {
    return wmget.call(store$1, it) || {};
  };

  has$1 = function (it) {
    return wmhas.call(store$1, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;

  set = function (it, metadata) {
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };

  get = function (it) {
    return has(it, STATE) ? it[STATE] : {};
  };

  has$1 = function (it) {
    return has(it, STATE);
  };
}

var internalState = {
  set: set,
  get: get,
  has: has$1,
  enforce: enforce,
  getterFor: getterFor
};

var redefine = createCommonjsModule(function (module) {
  var getInternalState = internalState.get;
  var enforceInternalState = internalState.enforce;
  var TEMPLATE = String(String).split('String');
  (module.exports = function (O, key, value, options) {
    var unsafe = options ? !!options.unsafe : false;
    var simple = options ? !!options.enumerable : false;
    var noTargetGet = options ? !!options.noTargetGet : false;
    var state;

    if (typeof value == 'function') {
      if (typeof key == 'string' && !has(value, 'name')) {
        createNonEnumerableProperty(value, 'name', key);
      }

      state = enforceInternalState(value);

      if (!state.source) {
        state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
      }
    }

    if (O === global_1) {
      if (simple) O[key] = value;else setGlobal(key, value);
      return;
    } else if (!unsafe) {
      delete O[key];
    } else if (!noTargetGet && O[key]) {
      simple = true;
    }

    if (simple) O[key] = value;else createNonEnumerableProperty(O, key, value); // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
  })(Function.prototype, 'toString', function toString() {
    return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
  });
});

var path = global_1;

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

var getBuiltIn = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global_1[namespace]) : path[namespace] && path[namespace][method] || global_1[namespace] && global_1[namespace][method];
};

var ceil = Math.ceil;
var floor = Math.floor; // `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger

var toInteger = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};

var min = Math.min; // `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength

var toLength = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var max = Math.max;
var min$1 = Math.min; // Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).

var toAbsoluteIndex = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);
};

var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value; // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare

    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++]; // eslint-disable-next-line no-self-compare

      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not
    } else for (; length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    }
    return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};

var indexOf = arrayIncludes.indexOf;

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;

  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key); // Don't enum bug & hidden keys


  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }

  return result;
};

// IE8- don't enum bug keys
var enumBugKeys = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];

var hiddenKeys$1 = enumBugKeys.concat('length', 'prototype'); // `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames

var f$3 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return objectKeysInternal(O, hiddenKeys$1);
};

var objectGetOwnPropertyNames = {
  f: f$3
};

var f$4 = Object.getOwnPropertySymbols;
var objectGetOwnPropertySymbols = {
  f: f$4
};

var ownKeys = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = objectGetOwnPropertyNames.f(anObject(it));
  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};

var copyConstructorProperties = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = objectDefineProperty.f;
  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true : value == NATIVE ? false : typeof detection == 'function' ? fails(detection) : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';
var isForced_1 = isForced;

var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/

var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;

  if (GLOBAL) {
    target = global_1;
  } else if (STATIC) {
    target = global_1[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global_1[TARGET] || {}).prototype;
  }

  if (target) for (key in source) {
    sourceProperty = source[key];

    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor$1(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];

    FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contained in target

    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    } // add a flag to not completely full polyfills


    if (options.sham || targetProperty && targetProperty.sham) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    } // extend global


    redefine(target, key, sourceProperty, options);
  }
};

// https://tc39.github.io/ecma262/#sec-isarray

var isArray = Array.isArray || function isArray(arg) {
  return classofRaw(arg) == 'Array';
};

// https://tc39.github.io/ecma262/#sec-toobject

var toObject = function (argument) {
  return Object(requireObjectCoercible(argument));
};

var createProperty = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) objectDefineProperty.f(object, propertyKey, createPropertyDescriptor(0, value));else object[propertyKey] = value;
};

var nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});

var useSymbolAsUid = nativeSymbol // eslint-disable-next-line no-undef
&& !Symbol.sham // eslint-disable-next-line no-undef
&& typeof Symbol.iterator == 'symbol';

var WellKnownSymbolsStore = shared('wks');
var Symbol$1 = global_1.Symbol;
var createWellKnownSymbol = useSymbolAsUid ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid;

var wellKnownSymbol = function (name) {
  if (!has(WellKnownSymbolsStore, name)) {
    if (nativeSymbol && has(Symbol$1, name)) WellKnownSymbolsStore[name] = Symbol$1[name];else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
  }

  return WellKnownSymbolsStore[name];
};

var SPECIES = wellKnownSymbol('species'); // `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate

var arraySpeciesCreate = function (originalArray, length) {
  var C;

  if (isArray(originalArray)) {
    C = originalArray.constructor; // cross-realm fallback

    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  }

  return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};

var engineUserAgent = getBuiltIn('navigator', 'userAgent') || '';

var process = global_1.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (engineUserAgent) {
  match = engineUserAgent.match(/Edge\/(\d+)/);

  if (!match || match[1] >= 74) {
    match = engineUserAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

var engineV8Version = version && +version;

var SPECIES$1 = wellKnownSymbol('species');

var arrayMethodHasSpeciesSupport = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return engineV8Version >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};

    constructor[SPECIES$1] = function () {
      return {
        foo: 1
      };
    };

    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded'; // We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679

var IS_CONCAT_SPREADABLE_SUPPORT = engineV8Version >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});
var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT; // `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species

_export({
  target: 'Array',
  proto: true,
  forced: FORCED
}, {
  concat: function concat(arg) {
    // eslint-disable-line no-unused-vars
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;

    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];

      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);

        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }

    A.length = n;
    return A;
  }
});

var aFunction$1 = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  }

  return it;
};

var functionBindContext = function (fn, that, length) {
  aFunction$1(fn);
  if (that === undefined) return fn;

  switch (length) {
    case 0:
      return function () {
        return fn.call(that);
      };

    case 1:
      return function (a) {
        return fn.call(that, a);
      };

    case 2:
      return function (a, b) {
        return fn.call(that, a, b);
      };

    case 3:
      return function (a, b, c) {
        return fn.call(that, a, b, c);
      };
  }

  return function ()
  /* ...args */
  {
    return fn.apply(that, arguments);
  };
};

var push = [].push; // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation

var createMethod$1 = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = indexedObject(O);
    var boundFunction = functionBindContext(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var value, result;

    for (; length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);

      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
            case 3:
              return true;
            // some

            case 5:
              return value;
            // find

            case 6:
              return index;
            // findIndex

            case 2:
              push.call(target, value);
            // filter
          } else if (IS_EVERY) return false; // every
      }
    }

    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

var arrayIteration = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod$1(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod$1(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod$1(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod$1(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod$1(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod$1(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod$1(6)
};

// https://tc39.github.io/ecma262/#sec-object.keys

var objectKeys = Object.keys || function keys(O) {
  return objectKeysInternal(O, enumBugKeys);
};

// https://tc39.github.io/ecma262/#sec-object.defineproperties

var objectDefineProperties = descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;

  while (length > index) objectDefineProperty.f(O, key = keys[index++], Properties[key]);

  return O;
};

var html = getBuiltIn('document', 'documentElement');

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () {
  /* empty */
};

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
}; // Create object with fake `null` prototype: use ActiveX Object with cleared prototype


var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak

  return temp;
}; // Create object with fake `null` prototype: use iframe Object with cleared prototype


var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe); // https://github.com/zloirock/core-js/issues/475

  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
}; // Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug


var activeXDocument;

var NullProtoObject = function () {
  try {
    /* global ActiveXObject */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) {
    /* ignore */
  }

  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;

  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];

  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true; // `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create

var objectCreate = Object.create || function create(O, Properties) {
  var result;

  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null; // add "__proto__" for Object.getPrototypeOf polyfill

    result[IE_PROTO] = O;
  } else result = NullProtoObject();

  return Properties === undefined ? result : objectDefineProperties(result, Properties);
};

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype; // Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables

if (ArrayPrototype[UNSCOPABLES] == undefined) {
  objectDefineProperty.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: objectCreate(null)
  });
} // add a key to Array.prototype[@@unscopables]


var addToUnscopables = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};

var defineProperty = Object.defineProperty;
var cache = {};

var thrower = function (it) {
  throw it;
};

var arrayMethodUsesToLength = function (METHOD_NAME, options) {
  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];
  if (!options) options = {};
  var method = [][METHOD_NAME];
  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;
  var argument0 = has(options, 0) ? options[0] : thrower;
  var argument1 = has(options, 1) ? options[1] : undefined;
  return cache[METHOD_NAME] = !!method && !fails(function () {
    if (ACCESSORS && !descriptors) return true;
    var O = {
      length: -1
    };
    if (ACCESSORS) defineProperty(O, 1, {
      enumerable: true,
      get: thrower
    });else O[1] = 1;
    method.call(O, argument0, argument1);
  });
};

var $findIndex = arrayIteration.findIndex;
var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;
var USES_TO_LENGTH = arrayMethodUsesToLength(FIND_INDEX); // Shouldn't skip holes

if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () {
  SKIPS_HOLES = false;
}); // `Array.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-array.prototype.findindex

_export({
  target: 'Array',
  proto: true,
  forced: SKIPS_HOLES || !USES_TO_LENGTH
}, {
  findIndex: function findIndex(callbackfn
  /* , that = undefined */
  ) {
    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
}); // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables(FIND_INDEX);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
var USES_TO_LENGTH$1 = arrayMethodUsesToLength('slice', {
  ACCESSORS: true,
  0: 0,
  1: 2
});
var SPECIES$2 = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max$1 = Math.max; // `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects

_export({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH$1
}, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length); // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible

    var Constructor, result, n;

    if (isArray(O)) {
      Constructor = O.constructor; // cross-realm fallback

      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES$2];
        if (Constructor === null) Constructor = undefined;
      }

      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }

    result = new (Constructor === undefined ? Array : Constructor)(max$1(fin - k, 0));

    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);

    result.length = n;
    return result;
  }
});

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

var Language = /*#__PURE__*/function () {
  // eslint-disable-next-line max-params
  function Language(language, months, monthsAbbr, days) {
    var rtl = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var ymd = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
    var yearSuffix = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';

    _classCallCheck(this, Language);

    this.language = language;
    this.months = months;
    this.monthsAbbr = monthsAbbr;
    this.days = days;
    this.rtl = rtl;
    this.ymd = ymd;
    this.yearSuffix = yearSuffix;
  }
  /* eslint-disable no-underscore-dangle */


  _createClass(Language, [{
    key: "getDaysStartingOn",
    value: function getDaysStartingOn(firstDayOfWeek) {
      var firstDays = this._days.slice(firstDayOfWeek);

      var lastDays = this._days.slice(0, firstDayOfWeek);

      return firstDays.concat(lastDays);
    }
  }, {
    key: "getMonthByAbbrName",
    value: function getMonthByAbbrName(name) {
      var monthValue = this._monthsAbbr.findIndex(function (month) {
        return month === name;
      }) + 1;
      return monthValue < 10 ? "0".concat(monthValue) : "".concat(monthValue);
    }
  }, {
    key: "getMonthByName",
    value: function getMonthByName(name) {
      var monthValue = this._months.findIndex(function (month) {
        return month === name;
      }) + 1;
      return monthValue < 10 ? "0".concat(monthValue) : "".concat(monthValue);
    }
  }, {
    key: "language",
    get: function get() {
      return this._language;
    },
    set: function set(language) {
      if (typeof language !== 'string') {
        throw new TypeError('Language must be a string');
      }

      this._language = language;
    }
  }, {
    key: "months",
    get: function get() {
      return this._months;
    },
    set: function set(months) {
      if (months.length !== 12) {
        throw new RangeError("There must be 12 months for ".concat(this.language, " language"));
      }

      this._months = months;
    }
  }, {
    key: "monthsAbbr",
    get: function get() {
      return this._monthsAbbr;
    },
    set: function set(monthsAbbr) {
      if (monthsAbbr.length !== 12) {
        throw new RangeError("There must be 12 abbreviated months for ".concat(this.language, " language"));
      }

      this._monthsAbbr = monthsAbbr;
    }
  }, {
    key: "days",
    get: function get() {
      return this._days;
    },
    set: function set(days) {
      if (days.length !== 7) {
        throw new RangeError("There must be 7 days for ".concat(this.language, " language"));
      }

      this._days = days;
    }
  }]);

  return Language;
}();

var af = new Language('Afrikaans', ['Januarie', 'Februarie', 'Maart', 'April', 'Mei', 'Junie', 'Julie', 'Augustus', 'September', 'Oktober', 'November', 'Desember'], ['Jan', 'Feb', 'Mrt', 'Apr', 'Mei', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'], ['So.', 'Ma.', 'Di.', 'Wo.', 'Do.', 'Vr.', 'Sa.']);

var language = new Language('Arabic', ['ÙÙØ§ÙØ±', 'ÙØ¨Ø±Ø§ÙØ±', 'ÙØ§Ø±Ø³', 'Ø£Ø¨Ø±ÙÙ', 'ÙØ§ÙÙ', 'ÙÙÙÙÙ', 'ÙÙÙÙÙ', 'Ø£ØºØ³Ø·Ø³', 'Ø³Ø¨ØªÙØ¨Ø±', 'Ø£ÙØªÙØ¨Ø±', 'ÙÙÚ¤ÙØ¨Ø±', 'Ø¯ÙØ³ÙØ¨Ø±'], ['ÙÙØ§ÙØ±', 'ÙØ¨Ø±Ø§ÙØ±', 'ÙØ§Ø±Ø³', 'Ø£Ø¨Ø±ÙÙ', 'ÙØ§ÙÙ', 'ÙÙÙÙÙ', 'ÙÙÙÙÙ', 'Ø£ØºØ³Ø·Ø³', 'Ø³Ø¨ØªÙØ¨Ø±', 'Ø£ÙØªÙØ¨Ø±', 'ÙÙÚ¤ÙØ¨Ø±', 'Ø¯ÙØ³ÙØ¨Ø±'], ['Ø£Ø­Ø¯', 'Ø¥Ø«ÙÙÙ', 'Ø«ÙØ§Ø«Ø§Ø¡', 'Ø£Ø±Ø¨Ø¹Ø§Ø¡', 'Ø®ÙÙØ³', 'Ø¬ÙØ¹Ø©', 'Ø³Ø¨Øª'], true);

var bg = new Language('Bulgarian', ['Ð¯Ð½ÑÐ°ÑÐ¸', 'Ð¤ÐµÐ²ÑÑÐ°ÑÐ¸', 'ÐÐ°ÑÑ', 'ÐÐ¿ÑÐ¸Ð»', 'ÐÐ°Ð¹', 'Ð®Ð½Ð¸', 'Ð®Ð»Ð¸', 'ÐÐ²Ð³ÑÑÑ', 'Ð¡ÐµÐ¿ÑÐµÐ¼Ð²ÑÐ¸', 'ÐÐºÑÐ¾Ð¼Ð²ÑÐ¸', 'ÐÐ¾ÐµÐ¼Ð²ÑÐ¸', 'ÐÐµÐºÐµÐ¼Ð²ÑÐ¸'], ['Ð¯Ð½', 'Ð¤ÐµÐ²', 'ÐÐ°Ñ', 'ÐÐ¿Ñ', 'ÐÐ°Ð¹', 'Ð®Ð½Ð¸', 'Ð®Ð»Ð¸', 'ÐÐ²Ð³', 'Ð¡ÐµÐ¿', 'ÐÐºÑ', 'ÐÐ¾Ðµ', 'ÐÐµÐº'], ['ÐÐ´', 'ÐÐ½', 'ÐÑ', 'Ð¡Ñ', 'Ð§Ñ', 'ÐÑ', 'Ð¡Ð±']);

var bs = new Language('Bosnian', ['Januar', 'Februar', 'Mart', 'April', 'Maj', 'Juni', 'Juli', 'Avgust', 'Septembar', 'Oktobar', 'Novembar', 'Decembar'], ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Avg', 'Sep', 'Okt', 'Nov', 'Dec'], ['Ned', 'Pon', 'Uto', 'Sri', 'Äet', 'Pet', 'Sub']);

var ca = new Language('Catalan', ['Gener', 'Febrer', 'MarÃ§', 'Abril', 'Maig', 'Juny', 'Juliol', 'Agost', 'Setembre', 'Octubre', 'Novembre', 'Desembre'], ['Gen', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Oct', 'Nov', 'Des'], ['Diu', 'Dil', 'Dmr', 'Dmc', 'Dij', 'Div', 'Dis']);

var cs = new Language('Czech', ['leden', 'Ãºnor', 'bÅezen', 'duben', 'kvÄten', 'Äerven', 'Äervenec', 'srpen', 'zÃ¡ÅÃ­', 'ÅÃ­jen', 'listopad', 'prosinec'], ['led', 'Ãºno', 'bÅe', 'dub', 'kvÄ', 'Äer', 'Äec', 'srp', 'zÃ¡Å', 'ÅÃ­j', 'lis', 'pro'], ['ne', 'po', 'Ãºt', 'st', 'Ät', 'pÃ¡', 'so']);

var da = new Language('Danish', ['Januar', 'Februar', 'Marts', 'April', 'Maj', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'December'], ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'], ['SÃ¸', 'Ma', 'Ti', 'On', 'To', 'Fr', 'LÃ¸']);

var de = new Language('German', ['Januar', 'Februar', 'MÃ¤rz', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'], ['Jan', 'Feb', 'MÃ¤r', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'], ['So.', 'Mo.', 'Di.', 'Mi.', 'Do.', 'Fr.', 'Sa.']);

var ee = new Language('Estonian', ['Jaanuar', 'Veebruar', 'MÃ¤rts', 'Aprill', 'Mai', 'Juuni', 'Juuli', 'August', 'September', 'Oktoober', 'November', 'Detsember'], ['Jaan', 'Veebr', 'MÃ¤rts', 'Apr', 'Mai', 'Juuni', 'Juuli', 'Aug', 'Sept', 'Okt', 'Nov', 'Dets'], ['P', 'E', 'T', 'K', 'N', 'R', 'L']);

var el = new Language('Greek', ['ÎÎ±Î½Î¿ÏÎ¬ÏÎ¹Î¿Ï', 'Î¦ÎµÎ²ÏÎ¿ÏÎ¬ÏÎ¹Î¿Ï', 'ÎÎ¬ÏÏÎ¹Î¿Ï', 'ÎÏÏÎ¯Î»Î¹Î¿Ï', 'ÎÎ¬ÏÎ¿Ï', 'ÎÎ¿ÏÎ½Î¹Î¿Ï', 'ÎÎ¿ÏÎ»Î¹Î¿Ï', 'ÎÏÎ³Î¿ÏÏÏÎ¿Ï', 'Î£ÎµÏÏÎ­Î¼Î²ÏÎ¹Î¿Ï', 'ÎÎºÏÏÎ²ÏÎ¹Î¿Ï', 'ÎÎ¿Î­Î¼Î²ÏÎ¹Î¿Ï', 'ÎÎµÎºÎ­Î¼Î²ÏÎ¹Î¿Ï'], ['ÎÎ±Î½', 'Î¦ÎµÎ²', 'ÎÎ±Ï', 'ÎÏÏ', 'ÎÎ±Î¹', 'ÎÎ¿ÏÎ½', 'ÎÎ¿ÏÎ»', 'ÎÏÎ³', 'Î£ÎµÏ', 'ÎÎºÏ', 'ÎÎ¿Îµ', 'ÎÎµÎº'], ['ÎÏÏ', 'ÎÎµÏ', 'Î¤ÏÎ¹', 'Î¤ÎµÏ', 'Î ÎµÎ¼', 'Î Î±Ï', 'Î£Î±Ï']);

var en = new Language('English', ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']);

var es = new Language('Spanish', ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'], ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'], ['Dom', 'Lun', 'Mar', 'MiÃ©', 'Jue', 'Vie', 'SÃ¡b']);

var fa = new Language('Persian', ['ÙØ±ÙØ±Ø¯ÛÙ', 'Ø§Ø±Ø¯ÛØ¨ÙØ´Øª', 'Ø®Ø±Ø¯Ø§Ø¯', 'ØªÛØ±', 'ÙØ±Ø¯Ø§Ø¯', 'Ø´ÙØ±ÛÙØ±', 'ÙÙØ±', 'Ø¢Ø¨Ø§Ù', 'Ø¢Ø°Ø±', 'Ø¯Û', 'Ø¨ÙÙÙ', 'Ø§Ø³ÙÙØ¯'], ['ÙØ±Ù', 'Ø§Ø±Ø¯', 'Ø®Ø±Ø¯', 'ØªÛØ±', 'ÙØ±Ø¯', 'Ø´ÙØ±', 'ÙÙØ±', 'Ø¢Ø¨Ø§', 'Ø¢Ø°Ø±', 'Ø¯Û', 'Ø¨ÙÙ', 'Ø§Ø³Ù'], ['ÛÚ©Ø´ÙØ¨Ù', 'Ø¯ÙØ´ÙØ¨Ù', 'Ø³ÙâØ´ÙØ¨Ù', 'ÚÙØ§Ø±Ø´ÙØ¨Ù', 'Ù¾ÙØ¬Ø´ÙØ¨Ù', 'Ø¬ÙØ¹Ù', 'Ø´ÙØ¨Ù']);

var fi = new Language('Finish', ['tammikuu', 'helmikuu', 'maaliskuu', 'huhtikuu', 'toukokuu', 'kesÃ¤kuu', 'heinÃ¤kuu', 'elokuu', 'syyskuu', 'lokakuu', 'marraskuu', 'joulukuu'], ['tammi', 'helmi', 'maalis', 'huhti', 'touko', 'kesÃ¤', 'heinÃ¤', 'elo', 'syys', 'loka', 'marras', 'joulu'], ['su', 'ma', 'ti', 'ke', 'to', 'pe', 'la']);

var fo = new Language('Faroese', ['Januar', 'Februar', 'Mars', 'AprÃ­l', 'Mai', 'Juni', 'Juli', 'August', 'Septembur', 'Oktobur', 'Novembur', 'Desembur'], ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'], ['Sun', 'MÃ¡n', 'TÃ½s', 'Mik', 'HÃ³s', 'FrÃ­', 'Ley']);

var fr = new Language('French', ['Janvier', 'FÃ©vrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'AoÃ»t', 'Septembre', 'Octobre', 'Novembre', 'DÃ©cembre'], ['Jan', 'FÃ©v', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'AoÃ»t', 'Sep', 'Oct', 'Nov', 'DÃ©c'], ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam']);

var ge = new Language('Georgia', ['áááááá á', 'ááááá áááá', 'ááá á¢á', 'ááá ááá', 'áááá¡á', 'ááááá¡á', 'ááááá¡á', 'ááááá¡á¢á', 'á¡áá¥á¢ááááá á', 'áá¥á¢ááááá á', 'ááááááá á', 'áááááááá á'], ['ááá', 'ááá', 'ááá ', 'ááá ', 'ááá', 'ááá', 'ááá', 'ááá', 'á¡áá¥', 'áá¥á¢', 'ááá', 'ááá'], ['ááá', 'áá á¨', 'á¡áá', 'ááá®', 'á®á£á', 'ááá ', 'á¨áá']);

var language$1 = new Language('Hebrew', ['×× ×××¨', '×¤××¨×××¨', '××¨×¥', '××¤×¨××', '×××', '××× ×', '××××', '×××××¡×', '×¡×¤××××¨', '×××§××××¨', '× ×××××¨', '××¦×××¨'], ['×× ×', '×¤××¨', '××¨×¥', '××¤×¨', '×××', '××× ', '×××', '×××', '×¡×¤×', '×××§', '× ××', '××¦×'], ['×', '×', '×', '×', '×', '×', '×©'], true);

var hr = new Language('Croatian', ['SijeÄanj', 'VeljaÄa', 'OÅ¾ujak', 'Travanj', 'Svibanj', 'Lipanj', 'Srpanj', 'Kolovoz', 'Rujan', 'Listopad', 'Studeni', 'Prosinac'], ['Sij', 'Velj', 'OÅ¾u', 'Tra', 'Svi', 'Lip', 'Srp', 'Kol', 'Ruj', 'Lis', 'Stu', 'Pro'], ['Ned', 'Pon', 'Uto', 'Sri', 'Äet', 'Pet', 'Sub']);

var hu = new Language('Hungarian', ['JanuÃ¡r', 'FebruÃ¡r', 'MÃ¡rcius', 'Ãprilis', 'MÃ¡jus', 'JÃºnius', 'JÃºlius', 'Augusztus', 'Szeptember', 'OktÃ³ber', 'November', 'December'], ['Jan', 'Febr', 'MÃ¡rc', 'Ãpr', 'MÃ¡j', 'JÃºn', 'JÃºl', 'Aug', 'Szept', 'Okt', 'Nov', 'Dec'], ['Vas', 'HÃ©t', 'Ke', 'Sze', 'CsÃ¼', 'PÃ©n', 'Szo']);

var id$1 = new Language('Indonesian', ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'], ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agu', 'Sep', 'Okt', 'Nov', 'Des'], ['Min', 'Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab']);

var is = new Language('Icelandic', ['JanÃºar', 'FebrÃºar', 'Mars', 'AprÃ­l', 'MaÃ­', 'JÃºnÃ­', 'JÃºlÃ­', 'ÃgÃºst', 'September', 'OktÃ³ber', 'NÃ³vember', 'Desember'], ['Jan', 'Feb', 'Mars', 'Apr', 'MaÃ­', 'JÃºn', 'JÃºl', 'ÃgÃº', 'Sep', 'Okt', 'NÃ³v', 'Des'], ['Sun', 'MÃ¡n', 'Ãri', 'MiÃ°', 'Fim', 'FÃ¶s', 'Lau']);

var it = new Language('Italian', ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'], ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'], ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab']);

var language$2 = new Language('Japanese', ['1æ', '2æ', '3æ', '4æ', '5æ', '6æ', '7æ', '8æ', '9æ', '10æ', '11æ', '12æ'], ['1æ', '2æ', '3æ', '4æ', '5æ', '6æ', '7æ', '8æ', '9æ', '10æ', '11æ', '12æ'], ['æ¥', 'æ', 'ç«', 'æ°´', 'æ¨', 'é', 'å'], false, true, 'å¹´');

var kk = new Language('Kazakh', ['ÒÐ°Ò£ÑÐ°Ñ', 'ÐÒÐ¿Ð°Ð½', 'ÐÐ°ÑÑÑÐ·', 'Ð¡ÓÑÑÑ', 'ÐÐ°Ð¼ÑÑ', 'ÐÐ°ÑÑÑÐ¼', 'Ð¨ÑÐ»Ð´Ðµ', 'Ð¢Ð°Ð¼ÑÐ·', 'ÒÑÑÐºÒ¯Ð¹ÐµÐº', 'ÒÐ°Ð·Ð°Ð½', 'ÒÐ°ÑÐ°ÑÐ°', 'ÐÐµÐ»ÑÐ¾ÒÑÐ°Ð½'], ['ÒÐ°Ò£', 'ÐÒÐ¿', 'ÐÐ°Ñ', 'Ð¡ÓÑ', 'ÐÐ°Ð¼', 'ÐÐ°Ñ', 'Ð¨ÑÐ»', 'Ð¢Ð°Ð¼', 'ÒÑÑ', 'ÒÐ°Ð·', 'ÒÐ°Ñ', 'ÐÐµÐ»'], ['ÐÐº', 'ÐÐ¹', 'Ð¡Ð¹', 'Ð¡Ñ', 'ÐÐ¹', 'ÐÐ¼', 'Ð¡Ð½']);

var language$3 = new Language('Korean', ['1ì', '2ì', '3ì', '4ì', '5ì', '6ì', '7ì', '8ì', '9ì', '10ì', '11ì', '12ì'], ['1ì', '2ì', '3ì', '4ì', '5ì', '6ì', '7ì', '8ì', '9ì', '10ì', '11ì', '12ì'], ['ì¼', 'ì', 'í', 'ì', 'ëª©', 'ê¸', 'í '], false, false, 'ë');

var lb = new Language('Luxembourgish', ['Januar', 'Februar', 'MÃ¤erz', 'AbrÃ«ll', 'MÃ¤i', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'], ['Jan', 'Feb', 'MÃ¤e', 'Abr', 'MÃ¤i', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'], ['So.', 'MÃ©.', 'DÃ«.', 'MÃ«.', 'Do.', 'Fr.', 'Sa.']);

var language$4 = new Language('Lithuanian', ['Sausis', 'Vasaris', 'Kovas', 'Balandis', 'GeguÅ¾Ä', 'BirÅ¾elis', 'Liepa', 'RugpjÅ«tis', 'RugsÄjis', 'Spalis', 'Lapkritis', 'Gruodis'], ['Sau', 'Vas', 'Kov', 'Bal', 'Geg', 'Bir', 'Lie', 'Rugp', 'Rugs', 'Spa', 'Lap', 'Gru'], ['Sek', 'Pir', 'Ant', 'Tre', 'Ket', 'Pen', 'Å eÅ¡'], false, true);

var lv = new Language('Latvian', ['JanvÄris', 'FebruÄris', 'Marts', 'AprÄ«lis', 'Maijs', 'JÅ«nijs', 'JÅ«lijs', 'Augusts', 'Septembris', 'Oktobris', 'Novembris', 'Decembris'], ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'JÅ«n', 'JÅ«l', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'], ['Sv', 'Pr', 'Ot', 'Tr', 'Ce', 'Pk', 'Se']);

var language$5 = new Language('Mongolia', ['1 Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ', '2 Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ', '3 Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ', '4 Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ', '5 Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ', '6 Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ', '7 Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ', '8 Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ', '9 Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ', '10 Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ', '11 Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ', '12 Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ'], ['1-Ñ ÑÐ°Ñ', '2-Ñ ÑÐ°Ñ', '3-Ñ ÑÐ°Ñ', '4-Ñ ÑÐ°Ñ', '5-Ñ ÑÐ°Ñ', '6-Ñ ÑÐ°Ñ', '7-Ñ ÑÐ°Ñ', '8-Ñ ÑÐ°Ñ', '9-Ñ ÑÐ°Ñ', '10-Ñ ÑÐ°Ñ', '11-Ñ ÑÐ°Ñ', '12-Ñ ÑÐ°Ñ'], ['ÐÑ', 'ÐÐ°', 'ÐÑ', 'ÐÑ', 'ÐÒ¯', 'ÐÐ°', 'ÐÑ'], false, true);

var nbNO = new Language('Norwegian BokmÃ¥l', ['Januar', 'Februar', 'Mars', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Desember'], ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'], ['SÃ¸', 'Ma', 'Ti', 'On', 'To', 'Fr', 'LÃ¸']);

var nl = new Language('Dutch', ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'], ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'], ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za']);

var pl = new Language('Polish', ['StyczeÅ', 'Luty', 'Marzec', 'KwiecieÅ', 'Maj', 'Czerwiec', 'Lipiec', 'SierpieÅ', 'WrzesieÅ', 'PaÅºdziernik', 'Listopad', 'GrudzieÅ'], ['Sty', 'Lut', 'Mar', 'Kwi', 'Maj', 'Cze', 'Lip', 'Sie', 'Wrz', 'PaÅº', 'Lis', 'Gru'], ['Nd', 'Pn', 'Wt', 'År', 'Czw', 'Pt', 'Sob']);

var ptBR = new Language('Brazilian', ['Janeiro', 'Fevereiro', 'MarÃ§o', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'], ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'], ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab']);

var ro = new Language('Romanian', ['Ianuarie', 'Februarie', 'Martie', 'Aprilie', 'Mai', 'Iunie', 'Iulie', 'August', 'Septembrie', 'Octombrie', 'Noiembrie', 'Decembrie'], ['Ian', 'Feb', 'Mar', 'Apr', 'Mai', 'Iun', 'Iul', 'Aug', 'Sep', 'Oct', 'Noi', 'Dec'], ['D', 'L', 'Ma', 'Mi', 'J', 'V', 'S']);

var ru = new Language('Russian', ['Ð¯Ð½Ð²Ð°ÑÑ', 'Ð¤ÐµÐ²ÑÐ°Ð»Ñ', 'ÐÐ°ÑÑ', 'ÐÐ¿ÑÐµÐ»Ñ', 'ÐÐ°Ð¹', 'ÐÑÐ½Ñ', 'ÐÑÐ»Ñ', 'ÐÐ²Ð³ÑÑÑ', 'Ð¡ÐµÐ½ÑÑÐ±ÑÑ', 'ÐÐºÑÑÐ±ÑÑ', 'ÐÐ¾ÑÐ±ÑÑ', 'ÐÐµÐºÐ°Ð±ÑÑ'], ['Ð¯Ð½Ð²', 'Ð¤ÐµÐ²Ñ', 'ÐÐ°ÑÑ', 'ÐÐ¿Ñ', 'ÐÐ°Ð¹', 'ÐÑÐ½Ñ', 'ÐÑÐ»Ñ', 'ÐÐ²Ð³', 'Ð¡ÐµÐ½Ñ', 'ÐÐºÑ', 'ÐÐ¾ÑÐ±', 'ÐÐµÐº'], ['ÐÑ', 'ÐÐ½', 'ÐÑ', 'Ð¡Ñ', 'Ð§Ñ', 'ÐÑ', 'Ð¡Ð±']);

var sk = new Language('Slovakian', ['januÃ¡r', 'februÃ¡r', 'marec', 'aprÃ­l', 'mÃ¡j', 'jÃºn', 'jÃºl', 'august', 'september', 'oktÃ³ber', 'november', 'december'], ['jan', 'feb', 'mar', 'apr', 'mÃ¡j', 'jÃºn', 'jÃºl', 'aug', 'sep', 'okt', 'nov', 'dec'], ['ne', 'po', 'ut', 'st', 'Å¡t', 'pi', 'so']);

var slSI = new Language('Sloveian', ['Januar', 'Februar', 'Marec', 'April', 'Maj', 'Junij', 'Julij', 'Avgust', 'September', 'Oktober', 'November', 'December'], ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Avg', 'Sep', 'Okt', 'Nov', 'Dec'], ['Ned', 'Pon', 'Tor', 'Sre', 'Äet', 'Pet', 'Sob']);

var sq = new Language('Albanian', ['Janar', 'Shkurt', 'Mars', 'Prill', 'Maj', 'Qershor', 'Korrik', 'Gusht', 'Shtator', 'Tetor', 'NÃ«ntor', 'Dhjetor'], ['Jan', 'Shk', 'Mar', 'Pri', 'Maj', 'Qer', 'Korr', 'Gus', 'Sht', 'Tet', 'NÃ«n', 'Dhj'], ['D', 'Ha', 'Ma', 'Mr', 'Ej', 'Pr', 'Sh']);

var sr = new Language('Serbian', ['Januar', 'Februar', 'Mart', 'April', 'Maj', 'Jun', 'Jul', 'Avgust', 'Septembar', 'Oktobar', 'Novembar', 'Decembar'], ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Avg', 'Sep', 'Okt', 'Nov', 'Dec'], ['Ned', 'Pon', 'Uto', 'Sre', 'Äet', 'Pet', 'Sub']);

var srCYRL = new Language('Serbian in Cyrillic script', ['ÐÐ°Ð½ÑÐ°Ñ', 'Ð¤ÐµÐ±ÑÑÐ°Ñ', 'ÐÐ°ÑÑ', 'ÐÐ¿ÑÐ¸Ð»', 'ÐÐ°Ñ', 'ÐÑÐ½', 'ÐÑÐ»', 'ÐÐ²Ð³ÑÑÑ', 'Ð¡ÐµÐ¿ÑÐµÐ¼Ð±Ð°Ñ', 'ÐÐºÑÐ¾Ð±Ð°Ñ', 'ÐÐ¾Ð²ÐµÐ¼Ð±Ð°Ñ', 'ÐÐµÑÐµÐ¼Ð±Ð°Ñ'], ['ÐÐ°Ð½', 'Ð¤ÐµÐ±', 'ÐÐ°Ñ', 'ÐÐ¿Ñ', 'ÐÐ°Ñ', 'ÐÑÐ½', 'ÐÑÐ»', 'ÐÐ²Ð³', 'Ð¡ÐµÐ¿', 'ÐÐºÑ', 'ÐÐ¾Ð²', 'ÐÐµÑ'], ['ÐÐµÐ´', 'ÐÐ¾Ð½', 'Ð£ÑÐ¾', 'Ð¡ÑÐµ', 'Ð§ÐµÑ', 'ÐÐµÑ', 'Ð¡ÑÐ±']);

var sv = new Language('Swedish', ['Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'], ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'], ['SÃ¶n', 'MÃ¥n', 'Tis', 'Ons', 'Tor', 'Fre', 'LÃ¶r']);

var th = new Language('Thai', ['à¸¡à¸à¸£à¸²à¸à¸¡', 'à¸à¸¸à¸¡à¸ à¸²à¸à¸±à¸à¸à¹', 'à¸¡à¸µà¸à¸²à¸à¸¡', 'à¹à¸¡à¸©à¸²à¸¢à¸', 'à¸à¸¤à¸©à¸ à¸²à¸à¸¡', 'à¸¡à¸´à¸à¸¸à¸à¸²à¸¢à¸', 'à¸à¸£à¸à¸à¸²à¸à¸¡', 'à¸ªà¸´à¸à¸«à¸²à¸à¸¡', 'à¸à¸±à¸à¸¢à¸²à¸¢à¸', 'à¸à¸¸à¸¥à¸²à¸à¸¡', 'à¸à¸¤à¸¨à¸à¸´à¸à¸²à¸¢à¸', 'à¸à¸±à¸à¸§à¸²à¸à¸¡'], ['à¸¡.à¸.', 'à¸.à¸.', 'à¸¡à¸µ.à¸.', 'à¹à¸¡.à¸¢.', 'à¸.à¸.', 'à¸¡à¸´.à¸¢.', 'à¸.à¸.', 'à¸ª.à¸.', 'à¸.à¸¢.', 'à¸.à¸.', 'à¸.à¸¢.', 'à¸.à¸.'], ['à¸­à¸²', 'à¸', 'à¸­', 'à¸', 'à¸à¸¤', 'à¸¨', 'à¸ª']);

var tr = new Language('Turkish', ['Ocak', 'Åubat', 'Mart', 'Nisan', 'MayÄ±s', 'Haziran', 'Temmuz', 'AÄustos', 'EylÃ¼l', 'Ekim', 'KasÄ±m', 'AralÄ±k'], ['Oca', 'Åub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'AÄu', 'Eyl', 'Eki', 'Kas', 'Ara'], ['Paz', 'Pzt', 'Sal', 'Ãar', 'Per', 'Cum', 'Cmt']);

var uk = new Language('Ukraine', ['Ð¡ÑÑÐµÐ½Ñ', 'ÐÑÑÐ¸Ð¹', 'ÐÐµÑÐµÐ·ÐµÐ½Ñ', 'ÐÐ²ÑÑÐµÐ½Ñ', 'Ð¢ÑÐ°Ð²ÐµÐ½Ñ', 'Ð§ÐµÑÐ²ÐµÐ½Ñ', 'ÐÐ¸Ð¿ÐµÐ½Ñ', 'Ð¡ÐµÑÐ¿ÐµÐ½Ñ', 'ÐÐµÑÐµÑÐµÐ½Ñ', 'ÐÐ¾Ð²ÑÐµÐ½Ñ', 'ÐÐ¸ÑÑÐ¾Ð¿Ð°Ð´', 'ÐÑÑÐ´ÐµÐ½Ñ'], ['Ð¡ÑÑ', 'ÐÑÑ', 'ÐÐµÑ', 'ÐÐ²ÑÑ', 'Ð¢ÑÐ°Ð²', 'Ð§ÐµÑ', 'ÐÐ¸Ð¿', 'Ð¡ÐµÑÐ¿', 'ÐÐµÑ', 'ÐÐ¾Ð²Ñ', 'ÐÐ¸ÑÑ', 'ÐÑÑÐ´'], ['ÐÐ´', 'ÐÐ½', 'ÐÑ', 'Ð¡Ñ', 'Ð§Ñ', 'ÐÑ', 'Ð¡Ð±']);

var language$6 = new Language('Urdu', ['Ø¬ÙÙØ±Û', 'ÙØ±ÙØ±Û', 'ÙØ§Ø±Ú', 'Ø§Ù¾Ø±ÛÙ', 'ÙØ¦Û', 'Ø¬ÙÙ', 'Ø¬ÙÙØ§Ø¦Û', 'Ø§Ú¯Ø³Øª', 'Ø³Ù¾ØªÙØ¨Ø±', 'Ø§Ú©ØªÙØ¨Ø±', 'ÙÙÙØ¨Ø±', 'Ø¯Ø³ÙØ¨Ø±'], ['Ø¬ÙÙØ±Û', 'ÙØ±ÙØ±Û', 'ÙØ§Ø±Ú', 'Ø§Ù¾Ø±ÛÙ', 'ÙØ¦Û', 'Ø¬ÙÙ', 'Ø¬ÙÙØ§Ø¦Û', 'Ø§Ú¯Ø³Øª', 'Ø³Ù¾ØªÙØ¨Ø±', 'Ø§Ú©ØªÙØ¨Ø±', 'ÙÙÙØ¨Ø±', 'Ø¯Ø³ÙØ¨Ø±'], ['Ø§ØªÙØ§Ø±', 'Ù¾ÛØ±', 'ÙÙÚ¯Ù', 'Ø¨Ø¯Ú¾', 'Ø¬ÙØ¹Ø±Ø§Øª', 'Ø¬ÙØ¹Û', 'ÛÙØªÛ'], true);

var vi = new Language('Vietnamese', ['ThÃ¡ng 01', 'ThÃ¡ng 02', 'ThÃ¡ng 03', 'ThÃ¡ng 04', 'ThÃ¡ng 05', 'ThÃ¡ng 06', 'ThÃ¡ng 07', 'ThÃ¡ng 08', 'ThÃ¡ng 09', 'ThÃ¡ng 10', 'ThÃ¡ng 11', 'ThÃ¡ng 12'], ['ThÃ¡ng 1', 'ThÃ¡ng 2', 'ThÃ¡ng 3', 'ThÃ¡ng 4', 'ThÃ¡ng 5', 'ThÃ¡ng 6', 'ThÃ¡ng 7', 'ThÃ¡ng 8', 'ThÃ¡ng 9', 'ThÃ¡ng 10', 'ThÃ¡ng 11', 'ThÃ¡ng 12'], ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7']);

var language$7 = new Language('Chinese', ['ä¸æ', 'äºæ', 'ä¸æ', 'åæ', 'äºæ', 'å­æ', 'ä¸æ', 'å«æ', 'ä¹æ', 'åæ', 'åä¸æ', 'åäºæ'], ['ä¸æ', 'äºæ', 'ä¸æ', 'åæ', 'äºæ', 'å­æ', 'ä¸æ', 'å«æ', 'ä¹æ', 'åæ', 'åä¸æ', 'åäºæ'], ['æ¥', 'ä¸', 'äº', 'ä¸', 'å', 'äº', 'å­'], false, false, 'å¹´');

exports.af = af;
exports.ar = language;
exports.bg = bg;
exports.bs = bs;
exports.ca = ca;
exports.cs = cs;
exports.da = da;
exports.de = de;
exports.ee = ee;
exports.el = el;
exports.en = en;
exports.es = es;
exports.fa = fa;
exports.fi = fi;
exports.fo = fo;
exports.fr = fr;
exports.ge = ge;
exports.he = language$1;
exports.hr = hr;
exports.hu = hu;
exports.id = id$1;
exports.is = is;
exports.it = it;
exports.ja = language$2;
exports.kk = kk;
exports.ko = language$3;
exports.lb = lb;
exports.lt = language$4;
exports.lv = lv;
exports.mn = language$5;
exports.nbNO = nbNO;
exports.nl = nl;
exports.pl = pl;
exports.ptBR = ptBR;
exports.ro = ro;
exports.ru = ru;
exports.sk = sk;
exports.slSI = slSI;
exports.sq = sq;
exports.sr = sr;
exports.srCYRL = srCYRL;
exports.sv = sv;
exports.th = th;
exports.tr = tr;
exports.uk = uk;
exports.ur = language$6;
exports.vi = vi;
exports.zh = language$7;
